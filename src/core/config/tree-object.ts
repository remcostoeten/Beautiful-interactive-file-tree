// This file is auto-generated. Do not edit manually.
export type FileExplorer = {
	name: string
	type: 'file' | 'directory'
	children?: FileExplorer[]
	content?: string
	language?: string
}

export const projectStructure: FileExplorer = {
	name: 'project-root',
	type: 'directory',
	children: [
		{
			name: 'src',
			type: 'directory',
			children: [
				{
					name: 'app',
					type: 'directory',
					children: [
						{
							name: 'favicon.ico',
							type: 'file',
							content: 'Binary file not shown',
							language: 'plaintext'
						},
						{
							name: 'fonts',
							type: 'directory',
							children: [
								{
									name: 'GeistMonoVF.woff',
									type: 'file',
									content: 'Binary file not shown',
									language: 'plaintext'
								},
								{
									name: 'GeistVF.woff',
									type: 'file',
									content: 'Binary file not shown',
									language: 'plaintext'
								}
							]
						},
						{
							name: 'globals.css',
							type: 'file',
							content:
								"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n\tfont-family: Arial, Helvetica, sans-serif;\n}\n\n@layer base {\n\t:root {\n\t\t--background: 0 0% 100%;\n\t\t--foreground: 0 0% 3.9%;\n\t\t--card: 0 0% 100%;\n\t\t--card-foreground: 0 0% 3.9%;\n\t\t--popover: 0 0% 100%;\n\t\t--popover-foreground: 0 0% 3.9%;\n\t\t--primary: 0 0% 9%;\n\t\t--primary-foreground: 0 0% 98%;\n\t\t--secondary: 0 0% 96.1%;\n\t\t--secondary-foreground: 0 0% 9%;\n\t\t--muted: 0 0% 96.1%;\n\t\t--muted-foreground: 0 0% 45.1%;\n\t\t--accent: 0 0% 96.1%;\n\t\t--accent-foreground: 0 0% 9%;\n\t\t--destructive: 0 84.2% 60.2%;\n\t\t--destructive-foreground: 0 0% 98%;\n\t\t--border: 0 0% 89.8%;\n\t\t--input: 0 0% 89.8%;\n\t\t--ring: 0 0% 3.9%;\n\t\t--chart-1: 12 76% 61%;\n\t\t--chart-2: 173 58% 39%;\n\t\t--chart-3: 197 37% 24%;\n\t\t--chart-4: 43 74% 66%;\n\t\t--chart-5: 27 87% 67%;\n\t\t--radius: 0.5rem;\n\t}\n\n\t.dark {\n\t\t--background: 0 0% 3.9%;\n\t\t--foreground: 0 0% 98%;\n\t\t--card: 0 0% 3.9%;\n\t\t--card-foreground: 0 0% 98%;\n\t\t--popover: 0 0% 3.9%;\n\t\t--popover-foreground: 0 0% 98%;\n\t\t--primary: 0 0% 98%;\n\t\t--primary-foreground: 0 0% 9%;\n\t\t--secondary: 0 0% 14.9%;\n\t\t--secondary-foreground: 0 0% 98%;\n\t\t--muted: 0 0% 14.9%;\n\t\t--muted-foreground: 0 0% 63.9%;\n\t\t--accent: 0 0% 14.9%;\n\t\t--accent-foreground: 0 0% 98%;\n\t\t--destructive: 0 62.8% 30.6%;\n\t\t--destructive-foreground: 0 0% 98%;\n\t\t--border: 0 0% 14.9%;\n\t\t--input: 0 0% 14.9%;\n\t\t--ring: 0 0% 83.1%;\n\t\t--chart-1: 220 70% 50%;\n\t\t--chart-2: 160 60% 45%;\n\t\t--chart-3: 30 80% 55%;\n\t\t--chart-4: 280 65% 60%;\n\t\t--chart-5: 340 75% 55%;\n\t}\n}\n\n@layer base {\n\t* {\n\t\t@apply border-border;\n\t}\n\n\tbody {\n\t\t@apply bg-background text-foreground;\n\t}\n}\n\n.file-tree {\n\tposition: relative;\n}\n\n.file-tree.gradient-visible::before {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\tbackground: linear-gradient(to bottom,\n\t\t\trgba(0, 0, 0, 0.5),\n\t\t\trgba(0, 0, 0, 0));\n\tpointer-events: none;\n\t/* Ensure it doesn't block clicks */\n\topacity: 1;\n\t/* Always visible when gradient-visible class is applied */\n\ttransition: opacity 0.3s ease;\n}\n\n.file-tree.selected::before {\n\topacity: 1;\n\t/* Keep it visible when a file is selected */\n}\n\n/* Webkit browsers (Chrome, Safari, newer Edge) */\n::-webkit-scrollbar {\n\twidth: 8px;\n\theight: 8px;\n}\n\n::-webkit-scrollbar-track {\n\tbackground: #111111;\n}\n\n::-webkit-scrollbar-thumb {\n\tbackground: #333333;\n\tborder-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n\tbackground: #444444;\n}\n\n/* Firefox */\n* {\n\tscrollbar-width: thin;\n\tscrollbar-color: #333333 #111111;\n}\n\n/* For the IDE specifically */\n.ide-container {\n\tscrollbar-width: thin;\n\tscrollbar-color: #333333 #111111;\n}\n\n.ide-container::-webkit-scrollbar {\n\twidth: 8px;\n\theight: 8px;\n}\n\n.ide-container::-webkit-scrollbar-track {\n\tbackground: #111111;\n}\n\n.ide-container::-webkit-scrollbar-thumb {\n\tbackground: #333333;\n\tborder-radius: 4px;\n}\n\n.ide-container::-webkit-scrollbar-thumb:hover {\n\tbackground: #444444;\n}\n",
							language: 'css'
						},
						{
							name: 'layout.tsx',
							type: 'file',
							content:
								"import ZenIDEModal from '@/components/zenIDEmodal'\nimport type { Metadata } from 'next'\nimport localFont from 'next/font/local'\nimport './globals.css'\n\nconst geistSans = localFont({\n\tsrc: './fonts/GeistVF.woff',\n\tvariable: '--font-geist-sans',\n\tweight: '100 900'\n})\nconst geistMono = localFont({\n\tsrc: './fonts/GeistMonoVF.woff',\n\tvariable: '--font-geist-mono',\n\tweight: '100 900'\n})\n\nexport const metadata: Metadata = {\n\ttitle: 'IDE Component | Remco Stoeten',\n\tdescription:\n\t\t'A powerful React component for file structure visualization. Built with TypeScript and Tailwind CSS.',\n\tkeywords: [\n\t\t'React',\n\t\t'TypeScript',\n\t\t'IDE',\n\t\t'File Explorer',\n\t\t'Component',\n\t\t'Visualization'\n\t],\n\tauthors: [{ name: 'Remco Stoeten' }],\n\tcreator: 'Remco Stoeten',\n\tpublisher: 'Remco Stoeten',\n\trobots: {\n\t\tindex: true,\n\t\tfollow: true,\n\t\tgoogleBot: {\n\t\t\tindex: true,\n\t\t\tfollow: true,\n\t\t\t'max-video-preview': -1,\n\t\t\t'max-image-preview': 'large',\n\t\t\t'max-snippet': -1\n\t\t}\n\t},\n\topenGraph: {\n\t\ttype: 'website',\n\t\tlocale: 'en_US',\n\t\turl: 'https://remcostoeten.com',\n\t\ttitle: 'IDE Component | Remco Stoeten',\n\t\tdescription:\n\t\t\t'A powerful React component for file structure visualization.',\n\t\tsiteName: 'IDE Component',\n\t\timages: [\n\t\t\t{\n\t\t\t\turl: 'https://remcostoeten.com/og-image.jpg', // Add your OG image\n\t\t\t\twidth: 1200,\n\t\t\t\theight: 630,\n\t\t\t\talt: 'IDE Component Preview'\n\t\t\t}\n\t\t]\n\t},\n\ttwitter: {\n\t\tcard: 'summary_large_image',\n\t\ttitle: 'IDE Component | Remco Stoeten',\n\t\tdescription:\n\t\t\t'A powerful React component for file structure visualization.',\n\t\tcreator: '@remcostoeten', // Your Twitter handle\n\t\timages: ['https://remcostoeten.com/twitter-image.jpg'] // Add your Twitter card image\n\t},\n\tverification: {\n\t\tgoogle: 'your-google-site-verification', // Add your Google verification code\n\t\tyandex: 'your-yandex-verification' // Optional\n\t},\n\tmanifest: '/manifest.json'\n}\n\nexport default function RootLayout({\n\tchildren\n}: Readonly<{\n\tchildren: React.ReactNode\n}>) {\n\treturn (\n\t\t<html lang=\"en\" className=\"dark\">\n\t\t\t<body\n\t\t\t\tclassName={`${geistSans.variable} ${geistMono.variable} antialiased`}\n\t\t\t>\n\t\t\t\t<ZenIDEModal />\n\t\t\t\t{children}\n\t\t\t</body>\n\t\t</html>\n\t)\n}\n",
							language: 'typescript'
						},
						{
							name: 'page.tsx',
							type: 'file',
							content:
								'\'use client\'\n\nimport ApiDocumentation from \'@/components/api-documentation\'\nimport { CodeBlock } from \'@/components/code-block/code-block\'\nimport FeatureCard from \'@/components/features/FeatureCard\'\nimport IDE from \'@/components/features/ide/ide\'\nimport Header from \'@/components/header\'\nimport PreCode from \'@/components/PreCode\'\nimport TerminalOutput from \'@/components/terminal-output\'\nimport { Button } from \'@/components/ui/button\'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \'@/components/ui/tabs\'\nimport { TYPE_DEFINITION, USAGE_EXAMPLE } from \'@/core/config/code-examples\'\nimport { getFileIcon } from \'@/core/config/file-icons\'\nimport { projectStructure } from \'@/core/config/tree-object\'\nimport useCursorGradient from \'@/hooks/useCursorGradient\'\nimport { animate, AnimatePresence, motion, stagger } from \'framer-motion\'\nimport {\n    Code2,\n    Heart,\n    Terminal,\n    Wand2,\n    X\n} from \'lucide-react\'\nimport { useEffect, useState } from \'react\'\n\nexport default function LandingPage() {\n    const [isZenMode, setIsZenMode] = useState(false)\n    const { position, opacity: cursorOpacity } = useCursorGradient()\n\n    type Animation = [\n        string,\n        { [key: string]: number[] },\n        { duration: number; delay: any }\n    ]\n\n    useEffect(() => {\n        const animations: Animation[] = [\n            [\n                \'.stagger-fade\',\n                { opacity: [0, 1], y: [20, 0] },\n                { duration: 0.5, delay: stagger(0.1) }\n            ],\n            [\n                \'.stagger-scale\',\n                { opacity: [0, 1], scale: [0.9, 1] },\n                { duration: 0.5, delay: stagger(0.1) }\n            ]\n        ]\n\n        animations.forEach(([selector, keyframes, options]) => {\n            const elements = document.querySelectorAll(selector)\n            elements.forEach((element) => {\n                animate(element, keyframes, options)\n            })\n        })\n    }, [])\n\n    return (\n        <div className="min-h-screen bg-black selection:bg-violet-500/20 selection:text-violet-200">\n            <div\n                className="pointer-events-none fixed inset-0 z-0 transition-opacity duration-300"\n                style={{\n                    background: `radial-gradient(800px at ${position.x}px ${position.y}px, rgba(29, 78, 216, 0.03), transparent 80%)`,\n                    opacity: cursorOpacity\n                }}\n            />\n            <div className="fixed inset-0 z-0 bg-[radial-gradient(circle_at_center,_var(--tw-gradient-stops))] from-violet-500/5 via-fuchsia-500/5 to-black opacity-50" />\n\n            <Header onZenMode={() => setIsZenMode(true)} />\n\n            {/* Main Content */}\n            <main className="max-w-screen-2xl mx-auto px-6 py-8">\n                {/* Hero Section */}\n                <div className="mb-12">\n                    <h1 className="text-3xl md:text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-white via-zinc-300 to-zinc-500 mb-4">\n                        Even your minified code will look{\' \'}\n                        <span className="text-transparent bg-clip-text bg-gradient-to-r from-violet-400 to-fuchsia-500">\n                            aesthetic\n                        </span>\n                    </h1>\n                    <motion.p className="stagger-fade text-pretty max-w-2xl mx-auto lg:mx-0 text-base text-zinc-400 mb-6">\n                        A powerful <PreCode>React</PreCode> component for file\n                        structure visualization. Built with{\' \'}\n                        <PreCode>TypeScript</PreCode> and{\' \'}\n                        <PreCode>Tailwind CSS</PreCode> and{\' \'}\n                        <PreCode>Motion</PreCode>. Generates your complete tree\n                        structures with a simple <PreCode>Python</PreCode>{\' \'}\n                        script.\n                    </motion.p>\n                </div>\n\n                <div className="grid grid-cols-1 lg:grid-cols-7 gap-6 mb-12">\n                    <div className="lg:col-span-5">\n                        <div className="rounded-lg border border-white/10 overflow-hidden bg-black ide-container">\n                            <Tabs\n                                defaultValue="demo"\n                                className="w-full relative"\n                            >\n                                <div className="border-b border-white/10 relative z-10">\n                                    <TabsList className="h-12 bg-zinc-900/50 relative">\n                                        <TabsTrigger\n                                            value="demo"\n                                            className="data-[state=active]:bg-black data-[state=active]:text-white px-4 relative z-20"\n                                        >\n                                            Live Demo\n                                        </TabsTrigger>\n                                        <TabsTrigger\n                                            value="code"\n                                            className="data-[state=active]:bg-black data-[state=active]:text-white px-4 relative z-20"\n                                        >\n                                            Usage\n                                        </TabsTrigger>\n                                    </TabsList>\n                                </div>\n\n                                <AnimatePresence mode="wait">\n                                    <TabsContent\n                                        value="demo"\n                                        className="relative z-0"\n                                    >\n                                        <motion.div\n                                            initial={{ opacity: 0, y: 10 }}\n                                            animate={{ opacity: 1, y: 0 }}\n                                            exit={{ opacity: 0, y: -10 }}\n                                            transition={{\n                                                duration: 0.2,\n                                                ease: \'easeOut\'\n                                            }}\n                                            className="w-full"\n                                        >\n                                            <IDE\n                                                root={projectStructure}\n                                                onSelect={(path) =>\n                                                    console.log(\n                                                        \'Selected:\',\n                                                        path\n                                                    )\n                                                }\n                                                theme="dark"\n                                                customIcons={getFileIcon}\n                                                colorfulIcons={true}\n                                            />\n                                        </motion.div>\n                                    </TabsContent>\n\n                                    <TabsContent\n                                        value="code"\n                                        className="relative z-0"\n                                    >\n                                        <motion.div\n                                            initial={{ opacity: 0, y: 10 }}\n                                            animate={{ opacity: 1, y: 0 }}\n                                            exit={{ opacity: 0, y: -10 }}\n                                            transition={{\n                                                duration: 0.2,\n                                                ease: \'easeOut\'\n                                            }}\n                                            className="p-6 space-y-6"\n                                        >\n                                            <CodeBlock\n                                                code={USAGE_EXAMPLE}\n                                                language="typescript"\n                                                fileName="IDEExample.tsx"\n                                                showLineNumbers\n                                                enableLineHighlight\n                                                badges={[\n                                                    {\n                                                        text: \'TypeScript\',\n                                                        variant: \'primary\'\n                                                    },\n                                                    {\n                                                        text: \'React\',\n                                                        variant: \'secondary\'\n                                                    }\n                                                ]}\n                                            />\n                                            <CodeBlock\n                                                code={TYPE_DEFINITION}\n                                                language="typescript"\n                                                fileName="types.ts"\n                                                showLineNumbers\n                                                enableLineHighlight\n                                                badges={[\n                                                    {\n                                                        text: \'TypeScript\',\n                                                        variant: \'primary\'\n                                                    }\n                                                ]}\n                                            />\n                                        </motion.div>\n                                    </TabsContent>\n                                </AnimatePresence>\n                            </Tabs>\n                        </div>\n                        <div className="mt-6">\n                            <TerminalOutput />\n                        </div>\n                    </div>\n\n                    <div className="lg:col-span-2 space-y-6">\n                        <div className="space-y-6">\n                            <h2 className="text-xl font-semibold text-white mb-4">\n                                Features\n                            </h2>\n                            <div className="space-y-6">\n                                <FeatureCard\n                                    feature={{\n                                        icon: <Terminal className="w-5 h-5" />,\n                                        title: \'Framework Agnostic\',\n                                        description:\n                                            "This is a lie, but LLM made 95% of this landing page and I\'m too lazy to change it."\n                                    }}\n                                    index={0}\n                                />\n                                <FeatureCard\n                                    feature={{\n                                        icon: <Wand2 className="w-5 h-5" />,\n                                        title: \'Fully Customizable\',\n                                        description:\n                                            \'Extensive theming support and customization options.\'\n                                    }}\n                                    index={1}\n                                />\n                                <FeatureCard\n                                    feature={{\n                                        icon: <Code2 className="w-5 h-5" />,\n                                        title: \'TypeScript Ready\',\n                                        description:\n                                            \'Built with TypeScript for excellent developer experience.\'\n                                    }}\n                                    index={2}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* API Documentation */}\n                <section className="border-t border-white/10 pt-12">\n                    <ApiDocumentation />\n                </section>\n            </main>\n\n            {/* Zen Mode */}\n            <AnimatePresence>\n                {isZenMode && (\n                    <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        className="fixed inset-0 bg-black z-50"\n                    >\n                        <div className="h-screen flex flex-col">\n                            <div className="flex justify-between items-center p-4 border-b border-white/10">\n                                <h2 className="text-xl font-bold text-white">\n                                    Zen Mode\n                                </h2>\n                                <Button\n                                    variant="ghost"\n                                    size="icon"\n                                    onClick={() => setIsZenMode(false)}\n                                >\n                                    <X className="w-6 h-6" />\n                                </Button>\n                            </div>\n                            <div className="flex-1 flex items-center justify-center">\n                                <IDE\n                                    root={projectStructure}\n                                    onSelect={(path) =>\n                                        console.log(\'Selected:\', path)\n                                    }\n                                    theme="dark"\n                                    customIcons={getFileIcon}\n                                    colorfulIcons={true}\n                                />\n                            </div>\n                        </div>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n\n            {/* Footer */}\n            <footer className="border-t border-white/10 py-6 px-6">\n                <div className="max-w-screen-2xl mx-auto">\n                    <p className="text-sm text-zinc-400 flex items-center justify-center gap-2">\n                        Made with{\' \'}\n                        <Heart className="w-4 h-4 text-red-500 animate-pulse" />{\' \'}\n                        by{\' \'}\n                        <a\n                            href="https://github.com/remcostoeten"\n                            className="text-violet-400 hover:text-violet-300"\n                        >\n                            Remco Stoeten\n                        </a>\n                    </p>\n                </div>\n            </footer>\n        </div>\n    )\n}\n',
							language: 'typescript'
						},
						{
							name: 'robots.ts',
							type: 'file',
							content:
								"import { MetadataRoute } from 'next'\n\nexport default function robots(): MetadataRoute.Robots {\n\treturn {\n\t\trules: {\n\t\t\tuserAgent: '*',\n\t\t\tallow: '/',\n\t\t\tdisallow: ['/private/', '/admin/'] // Add any private routes you want to block\n\t\t},\n\t\tsitemap: 'https://remcostoeten.com/sitemap.xml' // Replace with your domain\n\t}\n}\n",
							language: 'typescript'
						},
						{
							name: 'sitemap.ts',
							type: 'file',
							content:
								"import { MetadataRoute } from 'next'\n\nexport default function sitemap(): MetadataRoute.Sitemap {\n\tconst baseUrl = 'https://remcostoeten.com' // Replace with your domain\n\n\treturn [\n\t\t{\n\t\t\turl: baseUrl,\n\t\t\tlastModified: new Date(),\n\t\t\tchangeFrequency: 'monthly',\n\t\t\tpriority: 1\n\t\t},\n\t\t{\n\t\t\turl: `${baseUrl}/docs`,\n\t\t\tlastModified: new Date(),\n\t\t\tchangeFrequency: 'weekly',\n\t\t\tpriority: 0.8\n\t\t}\n\t\t// Add more routes as needed\n\t]\n}\n",
							language: 'typescript'
						}
					]
				},
				{
					name: 'components',
					type: 'directory',
					children: [
						{
							name: 'PreCode.tsx',
							type: 'file',
							content:
								"'use client'\n\nimport { useEffect, useState } from 'react'\n\ntype PreCodeProps = {\n\tchildren: React.ReactNode\n}\n\nexport default function PreCode({ children }: PreCodeProps) {\n\tconst [animationClass, setAnimationClass] = useState('')\n\n\tuseEffect(() => {\n\t\tconst speed = Math.random() < 0.5 ? 'slow' : 'fast'\n\t\tconst width = Math.random() < 0.5 ? 'wide' : 'narrow'\n\t\tsetAnimationClass(`animate-swirl-${speed} animate-swirl-${width}`)\n\t}, [])\n\n\treturn (\n\t\t<code\n\t\t\tclassName={`text-sm rounded-lg p-1 bg-black/95 inline-block border border-white/20 font-mono shadow-md shadow-zinc-900/30 drop-shadow-md drop-shadow-zinc-900/50 bg-gradient-to-r from-transparent via-zinc-900/50 to-transparent animate-swirl-left-to-right ${animationClass}`}\n\t\t>\n\t\t\t{children}\n\t\t</code>\n\t)\n}\n",
							language: 'typescript'
						},
						{
							name: 'api-documentation.tsx',
							type: 'file',
							content:
								'import { apiProps } from \'@/core/config/api-props\'\nimport { containerClass } from \'@/lib/utils\'\nimport PropsTable from \'./api-renderer\'\n\nexport default function ApiDocumentation() {\n\treturn (\n\t\t<section className="relative border-t border-white/10 bg-black/50 backdrop-blur-sm">\n\t\t\t<div className={`${containerClass} py-24`}>\n\t\t\t\t<div className="flex flex-col items-center gap-12">\n\t\t\t\t\t<h2 className="text-3xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-white via-violet-300 to-purple-500">\n\t\t\t\t\t\tAPI Documentation\n\t\t\t\t\t</h2>\n\t\t\t\t\t<PropsTable\n\t\t\t\t\t\tsections={apiProps}\n\t\t\t\t\t\tshowTypeColumn={true}\n\t\t\t\t\t\tshowDefaultColumn={true}\n\t\t\t\t\t\tsearchable={true}\n\t\t\t\t\t\tcollapsible={true}\n\t\t\t\t\t\tshowVersionBadges={true}\n\t\t\t\t\t\tshowBetaBadges={true}\n\t\t\t\t\t\tinitialTheme="dark"\n\t\t\t\t\t\tinitialSpacing="normal"\n\t\t\t\t\t\tinitialPropSpacing="normal"\n\t\t\t\t\t\tclassName="w-full"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n',
							language: 'typescript'
						},
						{
							name: 'api-renderer.tsx',
							type: 'file',
							content:
								"import { cn } from '../lib/utils'\n\nimport * as Tooltip from '@radix-ui/react-tooltip'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { Check, ChevronDown, Copy, ExternalLink, Search } from 'lucide-react'\nimport { useEffect, useRef, useState } from 'react'\nimport { Resizable } from 'react-resizable'\nimport 'react-resizable/css/styles.css'\n\nconst THEME_CONFIG = {\n\tlight: {\n\t\tbackground: 'bg-white',\n\t\tborder: 'border-gray-200',\n\t\ttext: 'text-gray-900',\n\t\tsecondaryText: 'text-gray-600',\n\t\thover: 'hover:bg-gray-50',\n\t\tdivider: 'divide-gray-200',\n\t\tinput: {\n\t\t\tbackground: 'bg-white',\n\t\t\tborder: 'border-gray-200',\n\t\t\tfocus: 'focus:border-blue-500 focus:ring-blue-500/20'\n\t\t},\n\t\tcode: 'text-purple-600',\n\t\tbadge: {\n\t\t\tdefault: 'bg-gray-100 text-gray-700 border-gray-200',\n\t\t\trequired: 'text-red-600',\n\t\t\tbeta: 'bg-blue-50 text-blue-600 border-blue-200',\n\t\t\tdeprecated: 'bg-red-50 text-red-600 border-red-200',\n\t\t\texperimental: 'bg-amber-50 text-amber-600 border-amber-200'\n\t\t},\n\t\tsection: {\n\t\t\theader: 'bg-white',\n\t\t\tdescription: 'text-gray-600'\n\t\t},\n\t\ttable: {\n\t\t\theader: 'bg-gray-50',\n\t\t\trow: 'even:bg-gray-200/50'\n\t\t}\n\t},\n\tdark: {\n\t\tbackground: 'bg-[#000000]',\n\t\tborder: 'border-[#333333]',\n\t\ttext: 'text-zinc-200',\n\t\tsecondaryText: 'text-zinc-400',\n\t\thover: 'hover:bg-[#1e1e1e]',\n\t\tdivider: 'divide-[#333333]',\n\t\tinput: {\n\t\t\tbackground: 'bg-[#111111]',\n\t\t\tborder: 'border-[#333333]',\n\t\t\tfocus: 'focus:border-blue-500 focus:ring-blue-500/20'\n\t\t},\n\t\tcode: 'text-blue-400',\n\t\tbadge: {\n\t\t\tdefault: 'bg-[#1e1e1e] text-zinc-300 border-[#333333]',\n\t\t\trequired: 'text-red-400',\n\t\t\tbeta: 'bg-blue-500/10 text-blue-400 border-blue-500/20',\n\t\t\tdeprecated: 'bg-red-500/10 text-red-400 border-red-500/20',\n\t\t\texperimental:\n\t\t\t\t'bg-yellow-500/10 text-yellow-400 border-yellow-500/20'\n\t\t},\n\t\tsection: {\n\t\t\theader: 'bg-[#111111]',\n\t\t\tdescription: 'text-zinc-400'\n\t\t},\n\t\ttable: {\n\t\t\theader: 'bg-[#111111]',\n\t\t\trow: 'even:bg-[#111111]/50'\n\t\t}\n\t},\n\tsystem: {\n\t\tbackground: 'dark:bg-zinc-900/50 bg-gray-50/80',\n\t\tborder: 'dark:border-zinc-800 border-gray-200',\n\t\ttext: 'dark:text-zinc-200 text-gray-900',\n\t\tsecondaryText: 'dark:text-zinc-400 text-gray-600',\n\t\thover: 'dark:hover:bg-zinc-800/50 hover:bg-gray-100/80',\n\t\tdivider: 'dark:divide-zinc-800 divide-gray-200',\n\t\tinput: {\n\t\t\tbackground: 'dark:bg-zinc-900/50 bg-white/80',\n\t\t\tborder: 'dark:border-zinc-800 border-gray-200',\n\t\t\tfocus: 'focus:border-blue-500 focus:ring-blue-500/20'\n\t\t},\n\t\tcode: 'dark:text-purple-400 text-purple-700',\n\t\tbadge: {\n\t\t\tdefault:\n\t\t\t\t'dark:bg-zinc-800/50 dark:text-zinc-300 dark:border-zinc-700 bg-white/80 text-gray-700 border-gray-200',\n\t\t\trequired: 'dark:text-red-400 text-red-600',\n\t\t\tbeta: 'dark:bg-blue-500/10 dark:text-blue-400 dark:border-blue-500/20 bg-blue-50/80 text-blue-700 border-blue-200',\n\t\t\tdeprecated:\n\t\t\t\t'dark:bg-red-500/10 dark:text-red-400 dark:border-red-500/20 bg-red-50/80 text-red-700 border-red-200',\n\t\t\texperimental:\n\t\t\t\t'dark:bg-yellow-500/10 dark:text-yellow-400 dark:border-yellow-500/20 bg-amber-50/80 text-amber-700 border-amber-200'\n\t\t},\n\t\tsection: {\n\t\t\theader: 'dark:bg-zinc-900/70 bg-white/80',\n\t\t\tdescription: 'dark:text-zinc-400 text-gray-600'\n\t\t},\n\t\ttable: {\n\t\t\theader: 'dark:bg-zinc-900/90 bg-white/90',\n\t\t\trow: 'dark:even:bg-zinc-800/30 even:bg-gray-50/50'\n\t\t}\n\t}\n} as const\n\n/**\n * Configuration for different spacing options in the component\n */\nconst SPACING_CONFIG = {\n\tsection: {\n\t\tcompact: 'space-y-2',\n\t\tnormal: 'space-y-6',\n\t\trelaxed: 'space-y-8'\n\t},\n\tprop: {\n\t\tnone: 'divide-y-0 [&_td]:py-2',\n\t\ttight: 'divide-y [&_td]:py-2',\n\t\tnormal: 'divide-y [&_td]:py-4',\n\t\trelaxed: 'divide-y [&_td]:py-6'\n\t}\n} as const\n\n/**\n * Represents a possible value for a prop with optional description\n */\ntype PropValue = {\n\tvalue: string\n\tdescription?: string\n}\n\n/**\n * Represents a single property item in the API documentation\n */\ntype PropItem = {\n\t/** The name of the property */\n\tname: string\n\t/** The type definition of the property */\n\ttype: string\n\t/** Description of what the property does */\n\tdescription: string\n\t/** Whether the property is required */\n\trequired?: boolean\n\t/** Default value if not specified */\n\tdefaultValue?: string\n\t/** External documentation link */\n\tlink?: string\n\t/** Whether the property is deprecated */\n\tdeprecated?: boolean\n\t/** Version when the property was introduced */\n\tsince?: string\n\t/** Example usage of the property */\n\texample?: string\n\t/** Whether the property is in beta */\n\tbeta?: boolean\n\t/** Whether the property is experimental */\n\texperimental?: boolean\n\t/** Possible values for enum/union types */\n\tvalues?: PropValue[]\n\t/** Additional notes or warnings */\n\tnotes?: string[]\n\t/** Code snippets demonstrating usage */\n\tcodeSnippets?: Array<{\n\t\tlanguage: string\n\t\tcode: string\n\t\tdescription?: string\n\t}>\n\t/** Related properties */\n\trelatedProps?: string[]\n\t/** Version history */\n\tchangelog?: Array<{\n\t\tversion: string\n\t\tchanges: string\n\t}>\n}\n\n/**\n * Represents a section of properties in the documentation\n */\ntype Section = {\n\t/** Section title */\n\ttitle: string\n\t/** Section description */\n\tdescription: string\n\t/** Properties in this section */\n\tprops: PropItem[]\n\t/** Whether the section should be expanded by default */\n\texpandedByDefault?: boolean\n\t/** Optional icon for the section */\n\ticon?: React.ReactNode\n\t/** Whether the section is in beta */\n\tbeta?: boolean\n}\n\n/**\n * Props for the PropsTable component\n */\ntype PropsTableProps = {\n\t/** Array of sections containing props */\n\tsections: Section[]\n\t/** Whether to show the type column */\n\tshowTypeColumn?: boolean\n\t/** Whether to show the default value column */\n\tshowDefaultColumn?: boolean\n\t/** Additional className for the container */\n\tclassName?: string\n\t/** Whether to show the search input */\n\tsearchable?: boolean\n\t/** Whether sections can be collapsed */\n\tcollapsible?: boolean\n\t/** Whether to show the copy button */\n\tshowCopyButton?: boolean\n\t/** Whether to show version badges */\n\tshowVersionBadges?: boolean\n\t/** Whether to show beta badges */\n\tshowBetaBadges?: boolean\n\t/** Initial theme setting */\n\tinitialTheme?: ThemeOption\n\t/** Initial section spacing */\n\tinitialSpacing?: SpacingOption\n\t/** Initial prop spacing */\n\tinitialPropSpacing?: PropSpacingOption\n\t/** Callback when a prop is clicked */\n\tonPropClick?: (propName: string) => void\n\t/** Custom badges configuration */\n\tcustomBadges?: Record<\n\t\tstring,\n\t\t{\n\t\t\ttext: string\n\t\t\tclassName: string\n\t\t}\n\t>\n}\n\nconst SECTION_ANIMATION = {\n\tinitial: { opacity: 0, y: 10 },\n\tanimate: { opacity: 1, y: 0 },\n\ttransition: { duration: 0.2, ease: 'easeOut' }\n} as const\n\ntype ThemeOption = keyof typeof THEME_CONFIG\ntype SpacingOption = keyof typeof SPACING_CONFIG.section\ntype PropSpacingOption = keyof typeof SPACING_CONFIG.prop\n\ntype SettingsState = {\n\ttheme: ThemeOption\n\tspacing: SpacingOption\n\tpropSpacing: PropSpacingOption\n}\n\n// Add these animation constants\nconst POPOVER_ANIMATION = {\n\tinitial: { opacity: 0, scale: 0.95 },\n\tanimate: { opacity: 1, scale: 1 },\n\texit: { opacity: 0, scale: 0.95 },\n\ttransition: { duration: 0.2, ease: 'easeOut' }\n} as const\n\nconst STAGGER_ANIMATION = {\n\tinitial: { opacity: 0, y: 10 },\n\tanimate: { opacity: 1, y: 0 },\n\ttransition: { duration: 0.2, ease: 'easeOut' }\n} as const\n\nconst STAGGER_CONTAINER = {\n\tanimate: {\n\t\ttransition: {\n\t\t\tstaggerChildren: 0.1\n\t\t}\n\t}\n} as const\n\n// Update the COLUMN_WIDTHS constant with more consistent widths\nconst COLUMN_WIDTHS = {\n\tprop: 'w-[220px] min-w-[220px] max-w-[220px] truncate',\n\ttype: 'w-[220px] min-w-[220px] max-w-[220px] truncate',\n\tdefault: 'w-[160px] min-w-[160px] max-w-[160px] truncate', // Slightly smaller for default values\n\tdescription: 'w-full min-w-[220px]', // Same base width as others\n\tactions: 'w-[40px] min-w-[40px] max-w-[40px]'\n} as const\n\n// Note: To implement draggable columns, we would need to:\n// 1. Add react-resizable or similar library\n// 2. Track column widths in state\n// 3. Add resize handlers\n// 4. Store preferences in localStorage\n\n// Example implementation structure (to be implemented later):\n/*\ntype ColumnWidth = {\n  prop: number;\n  type: number;\n  default: number;\n  description: number;\n};\n\nconst [columnWidths, setColumnWidths] = useState<ColumnWidth>(() => {\n  // Load from localStorage or use defaults\n  return {\n    prop: 220,\n    type: 220,\n    default: 160,\n    description: 220\n  };\n});\n\n// Add resize handlers to th elements\n<th \n  className={...}\n  style={{ width: columnWidths.prop }}\n  // Add resize handlers here\n>\n*/\n\nconst DETAILS_ANIMATION = {\n\tinitial: {\n\t\theight: 0,\n\t\topacity: 0,\n\t\tscale: 0.98,\n\t\ttransformOrigin: 'top'\n\t},\n\tanimate: {\n\t\theight: 'auto',\n\t\topacity: 1,\n\t\tscale: 1,\n\t\ttransformOrigin: 'top'\n\t},\n\texit: {\n\t\theight: 0,\n\t\topacity: 0,\n\t\tscale: 0.98,\n\t\ttransformOrigin: 'top'\n\t},\n\ttransition: {\n\t\theight: {\n\t\t\tduration: 0.25,\n\t\t\tease: [0.32, 0.72, 0, 1]\n\t\t},\n\t\topacity: {\n\t\t\tduration: 0.15,\n\t\t\tease: 'easeOut'\n\t\t},\n\t\tscale: {\n\t\t\tduration: 0.15,\n\t\t\tease: 'easeOut'\n\t\t}\n\t}\n} as const\n\n// Add this type near other type definitions\ntype PillProps = {\n\tvariant?: 'default' | 'info' | 'success' | 'warning' | 'error' | 'beta'\n\tchildren: React.ReactNode\n\tclassName?: string\n}\n\n// Add this component near other component definitions\nfunction Pill({ variant = 'default', children, className }: PillProps) {\n\tconst variants = {\n\t\tdefault: 'bg-[#1e1e1e] text-zinc-300 border-[#333333]',\n\t\tinfo: 'bg-blue-500/10 text-blue-400 border-blue-500/20',\n\t\tsuccess: 'bg-green-500/10 text-green-400 border-green-500/20',\n\t\twarning: 'bg-yellow-500/10 text-yellow-400 border-yellow-500/20',\n\t\terror: 'bg-red-500/10 text-red-400 border-red-500/20',\n\t\tbeta: 'bg-purple-500/10 text-purple-400 border-purple-500/20'\n\t}\n\n\treturn (\n\t\t<span\n\t\t\tclassName={cn(\n\t\t\t\t'text-xs px-2 py-0.5 rounded-full border shrink-0 whitespace-nowrap',\n\t\t\t\tvariants[variant],\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t)\n}\n\n// Add this component definition before the PropsTable component\ntype TruncatedTextProps = {\n\ttext: string\n\tclassName?: string\n}\n\nfunction TruncatedText({ text, className }: TruncatedTextProps) {\n\tconst [isTruncated, setIsTruncated] = useState(false)\n\tconst [isDragging, setIsDragging] = useState(false)\n\tconst [dragStart, setDragStart] = useState(0)\n\tconst [scrollLeft, setScrollLeft] = useState(0)\n\tconst containerRef = useRef<HTMLDivElement>(null)\n\tconst textRef = useRef<HTMLSpanElement>(null)\n\n\tuseEffect(() => {\n\t\tconst element = textRef.current\n\t\tif (element) {\n\t\t\tsetIsTruncated(element.scrollWidth > element.clientWidth)\n\t\t}\n\t}, [text])\n\n\tconst handleMouseDown = (e: React.MouseEvent) => {\n\t\tsetIsDragging(true)\n\t\tsetDragStart(e.clientX - scrollLeft)\n\t}\n\n\tconst handleMouseMove = (e: React.MouseEvent) => {\n\t\tif (!isDragging || !containerRef.current || !textRef.current) return\n\n\t\tconst x = e.clientX - dragStart\n\t\tconst maxScroll =\n\t\t\ttextRef.current.scrollWidth - containerRef.current.clientWidth\n\t\tconst newScrollLeft = Math.max(Math.min(0, x), -maxScroll)\n\n\t\tsetScrollLeft(newScrollLeft)\n\t}\n\n\tconst handleMouseUp = () => {\n\t\tsetIsDragging(false)\n\t}\n\n\tconst handleMouseLeave = () => {\n\t\tif (isDragging) {\n\t\t\tsetIsDragging(false)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetScrollLeft(0)\n\t}, [text])\n\n\tif (!isTruncated) {\n\t\treturn (\n\t\t\t<span ref={textRef} className={className}>\n\t\t\t\t{text}\n\t\t\t</span>\n\t\t)\n\t}\n\n\tconst Content = () => (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={cn(\n\t\t\t\t'relative overflow-hidden cursor-grab active:cursor-grabbing',\n\t\t\t\tisDragging && 'select-none'\n\t\t\t)}\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tonMouseMove={handleMouseMove}\n\t\t\tonMouseUp={handleMouseUp}\n\t\t\tonMouseLeave={handleMouseLeave}\n\t\t>\n\t\t\t<motion.div\n\t\t\t\tanimate={{ x: scrollLeft }}\n\t\t\t\ttransition={{ type: 'spring', bounce: 0 }}\n\t\t\t\tdrag=\"x\"\n\t\t\t\tdragConstraints={{\n\t\t\t\t\tleft: containerRef.current\n\t\t\t\t\t\t? -1 *\n\t\t\t\t\t\t\t((textRef.current?.scrollWidth || 0) -\n\t\t\t\t\t\t\t\t(containerRef.current?.clientWidth || 0))\n\t\t\t\t\t\t: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t}}\n\t\t\t\tdragElastic={0.1}\n\t\t\t\tdragMomentum={false}\n\t\t\t\tclassName=\"cursor-grab active:cursor-grabbing\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tref={textRef}\n\t\t\t\t\tclassName={cn(className, 'whitespace-nowrap inline-block')}\n\t\t\t\t>\n\t\t\t\t\t{text}\n\t\t\t\t</span>\n\t\t\t</motion.div>\n\t\t\t{isTruncated && (\n\t\t\t\t<div className=\"absolute inset-y-0 right-0 w-8 bg-gradient-to-l from-zinc-900 to-transparent pointer-events-none\" />\n\t\t\t)}\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<Tooltip.Provider delayDuration={300}>\n\t\t\t<Tooltip.Root>\n\t\t\t\t<Tooltip.Trigger asChild>\n\t\t\t\t\t<div className=\"w-full\">\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip.Trigger>\n\t\t\t\t<Tooltip.Portal>\n\t\t\t\t\t<Tooltip.Content\n\t\t\t\t\t\tclassName=\"z-50 px-3 py-1.5 text-sm bg-zinc-900 text-zinc-200 rounded-lg shadow-xl border border-zinc-800 max-w-xs break-words animate-in fade-in-0 zoom-in-95\"\n\t\t\t\t\t\tside=\"top\"\n\t\t\t\t\t\tsideOffset={4}\n\t\t\t\t\t>\n\t\t\t\t\t\t{text}\n\t\t\t\t\t\t<Tooltip.Arrow className=\"fill-zinc-900\" />\n\t\t\t\t\t</Tooltip.Content>\n\t\t\t\t</Tooltip.Portal>\n\t\t\t</Tooltip.Root>\n\t\t</Tooltip.Provider>\n\t)\n}\n\n// Add this type for column widths\ntype ColumnWidth = {\n\tprop: number\n\ttype: number\n\tdefault: number\n\tdescription: number\n\tactions: number\n}\n\n// Add this helper component for the draggable badges container\nfunction DraggableBadges({\n\tchildren,\n\tclassName\n}: {\n\tchildren: React.ReactNode\n\tclassName?: string\n}) {\n\tconst containerRef = useRef<HTMLDivElement>(null)\n\tconst [isDragging, setIsDragging] = useState(false)\n\tconst [isTruncated, setIsTruncated] = useState(false)\n\tconst dragStartTime = useRef<number>(0)\n\n\t// Check if content is truncated\n\tuseEffect(() => {\n\t\tconst element = containerRef.current\n\t\tif (element) {\n\t\t\tsetIsTruncated(element.scrollWidth > element.clientWidth)\n\t\t}\n\t}, [children])\n\n\tconst Content = () => (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={cn(\n\t\t\t\t'relative overflow-hidden',\n\t\t\t\tisDragging && 'select-none',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tonClick={(e) => {\n\t\t\t\t// Prevent click propagation if we were dragging\n\t\t\t\tif (isDragging || Date.now() - dragStartTime.current < 200) {\n\t\t\t\t\te.stopPropagation()\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<motion.div\n\t\t\t\tdrag={isTruncated ? 'x' : false}\n\t\t\t\tdragConstraints={containerRef}\n\t\t\t\tdragElastic={0.1}\n\t\t\t\tdragMomentum={false}\n\t\t\t\tonDragStart={() => {\n\t\t\t\t\tsetIsDragging(true)\n\t\t\t\t\tdragStartTime.current = Date.now()\n\t\t\t\t}}\n\t\t\t\tonDragEnd={() => {\n\t\t\t\t\tsetIsDragging(false)\n\t\t\t\t\t// Keep dragStartTime for a short while to prevent click\n\t\t\t\t}}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'flex items-center gap-1',\n\t\t\t\t\tisTruncated && 'cursor-grab active:cursor-grabbing'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</motion.div>\n\t\t\t{isTruncated && (\n\t\t\t\t<div className=\"absolute inset-y-0 right-0 w-8 bg-gradient-to-l from-zinc-900 to-transparent pointer-events-none\" />\n\t\t\t)}\n\t\t</div>\n\t)\n\n\t// Show tooltip only if content is truncated\n\tif (!isTruncated) {\n\t\treturn <Content />\n\t}\n\n\treturn (\n\t\t<Tooltip.Provider delayDuration={300}>\n\t\t\t<Tooltip.Root>\n\t\t\t\t<Tooltip.Trigger asChild>\n\t\t\t\t\t<div className=\"w-full\">\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip.Trigger>\n\t\t\t\t<Tooltip.Portal>\n\t\t\t\t\t<Tooltip.Content\n\t\t\t\t\t\tclassName=\"z-50 px-3 py-1.5 text-sm bg-zinc-900 text-zinc-200 rounded-lg shadow-xl border border-zinc-800 max-w-xs break-words animate-in fade-in-0 zoom-in-95\"\n\t\t\t\t\t\tside=\"top\"\n\t\t\t\t\t\tsideOffset={4}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"flex flex-wrap gap-1\">{children}</div>\n\t\t\t\t\t\t<Tooltip.Arrow className=\"fill-zinc-900\" />\n\t\t\t\t\t</Tooltip.Content>\n\t\t\t\t</Tooltip.Portal>\n\t\t\t</Tooltip.Root>\n\t\t</Tooltip.Provider>\n\t)\n}\n\n// Add this helper function at the top level\nconst getInitialColumnWidths = (): ColumnWidth => ({\n\tprop: 220,\n\ttype: 220,\n\tdefault: 160,\n\tdescription: 300,\n\tactions: 40\n})\n\nexport default function PropsTable({\n\tsections,\n\tshowTypeColumn = true,\n\tshowDefaultColumn = true,\n\tclassName,\n\tsearchable = true,\n\tcollapsible = true,\n\tshowVersionBadges = true,\n\tshowBetaBadges = true,\n\tinitialTheme = 'dark',\n\tinitialSpacing = 'normal',\n\tinitialPropSpacing = 'normal',\n\tonPropClick,\n\tcustomBadges\n}: PropsTableProps) {\n\tconst [searchQuery, setSearchQuery] = useState('')\n\tconst [copiedProp, setCopiedProp] = useState<string | null>(null)\n\tconst [expandedSections, setExpandedSections] = useState<\n\t\tRecord<string, boolean>\n\t>(\n\t\tsections.reduce(\n\t\t\t(acc, section) => ({\n\t\t\t\t...acc,\n\t\t\t\t[section.title]: section.expandedByDefault ?? true\n\t\t\t}),\n\t\t\t{}\n\t\t)\n\t)\n\n\tconst currentTheme = THEME_CONFIG[initialTheme]\n\n\t// Update the columnWidths state in PropsTable component\n\tconst [columnWidths, setColumnWidths] = useState<ColumnWidth>(\n\t\tgetInitialColumnWidths()\n\t)\n\n\t// Add this effect to load from localStorage only on client side\n\tuseEffect(() => {\n\t\t// Only run on client side\n\t\tif (typeof window !== 'undefined') {\n\t\t\tconst saved = localStorage.getItem('api-renderer-column-widths')\n\t\t\tif (saved) {\n\t\t\t\ttry {\n\t\t\t\t\tconst parsed = JSON.parse(saved)\n\t\t\t\t\tsetColumnWidths(parsed)\n\t\t\t\t} catch {\n\t\t\t\t\tconsole.error('Failed to parse saved column widths')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, []) // Run once on mount\n\n\t// Update the save effect to only run on client side\n\tuseEffect(() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'api-renderer-column-widths',\n\t\t\t\tJSON.stringify(columnWidths)\n\t\t\t)\n\t\t}\n\t}, [columnWidths])\n\n\t// Handle column resize\n\tconst onResize =\n\t\t(column: keyof ColumnWidth) =>\n\t\t(_e: React.SyntheticEvent, { size }: { size: { width: number } }) => {\n\t\t\tsetColumnWidths((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\t[column]: Math.max(size.width, 100)\n\t\t\t}))\n\t\t}\n\n\t// Resizable column header component\n\tconst ResizableHeader = ({\n\t\tcolumn,\n\t\tchildren\n\t}: {\n\t\tcolumn: keyof ColumnWidth\n\t\tchildren: React.ReactNode\n\t}) => (\n\t\t<Resizable\n\t\t\twidth={columnWidths[column]}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"absolute right-0 top-0 h-full w-2 cursor-col-resize group\"\n\t\t\t\t\tstyle={{ touchAction: 'none' }}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"h-full w-1 group-hover:bg-blue-500/50 transition-colors\" />\n\t\t\t\t</div>\n\t\t\t}\n\t\t\tonResize={onResize(column)}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'px-6 py-3 text-left text-xs font-medium uppercase tracking-wider relative',\n\t\t\t\t\tcurrentTheme.secondaryText\n\t\t\t\t)}\n\t\t\t\tstyle={{ width: columnWidths[column] }}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</th>\n\t\t</Resizable>\n\t)\n\n\tconst filterProps = (props: PropItem[]) => {\n\t\tif (!searchQuery) return props\n\t\treturn props.filter(\n\t\t\t(prop) =>\n\t\t\t\tprop.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n\t\t\t\tprop.description\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.includes(searchQuery.toLowerCase()) ||\n\t\t\t\tprop.type.toLowerCase().includes(searchQuery.toLowerCase())\n\t\t)\n\t}\n\n\tconst handleCopy = (text: string, propName: string) => {\n\t\tnavigator.clipboard.writeText(text)\n\t\tsetCopiedProp(propName)\n\t\tsetTimeout(() => setCopiedProp(null), 2000)\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cn(\n\t\t\t\t'w-full rounded-xl backdrop-blur-sm',\n\t\t\t\tSPACING_CONFIG.section[initialSpacing],\n\t\t\t\tcurrentTheme.background,\n\t\t\t\tcurrentTheme.border,\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t<div className=\"flex items-center justify-between mb-4\">\n\t\t\t\t{searchable && (\n\t\t\t\t\t<div className=\"relative flex-1\">\n\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t'absolute left-3 top-1/2 transform -translate-y-1/2',\n\t\t\t\t\t\t\t\tcurrentTheme.secondaryText\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tsize={16}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search props...\"\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t'w-full pl-10 pr-4 py-3 rounded-xl text-sm transition-colors',\n\t\t\t\t\t\t\t\tcurrentTheme.input.background,\n\t\t\t\t\t\t\t\tcurrentTheme.input.border,\n\t\t\t\t\t\t\t\tcurrentTheme.input.focus,\n\t\t\t\t\t\t\t\tcurrentTheme.text\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t{sections.map((section, sectionIndex) => {\n\t\t\t\tconst filteredProps = filterProps(section.props)\n\t\t\t\tif (filteredProps.length === 0) return null\n\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tkey={sectionIndex}\n\t\t\t\t\t\t{...SECTION_ANIMATION}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t'rounded-xl border overflow-hidden',\n\t\t\t\t\t\t\tcurrentTheme.border,\n\t\t\t\t\t\t\tcurrentTheme.background\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t'px-6 py-4 border-b transition-colors',\n\t\t\t\t\t\t\t\tcurrentTheme.border,\n\t\t\t\t\t\t\t\tcurrentTheme.section.header,\n\t\t\t\t\t\t\t\tcollapsible && 'cursor-pointer',\n\t\t\t\t\t\t\t\tcollapsible && currentTheme.hover\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tcollapsible &&\n\t\t\t\t\t\t\t\tsetExpandedSections((prev) => ({\n\t\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\t\t[section.title]: !prev[section.title]\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h3\n\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t'text-lg font-medium',\n\t\t\t\t\t\t\t\t\t\t\tcurrentTheme.text\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{section.title}\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t{section.description && (\n\t\t\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t'mt-1 text-sm',\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentTheme.secondaryText\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{section.description}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{collapsible && (\n\t\t\t\t\t\t\t\t\t<ChevronDown\n\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t'transform transition-transform duration-300',\n\t\t\t\t\t\t\t\t\t\t\tcurrentTheme.secondaryText,\n\t\t\t\t\t\t\t\t\t\t\texpandedSections[section.title]\n\t\t\t\t\t\t\t\t\t\t\t\t? 'rotate-180'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<AnimatePresence initial={false}>\n\t\t\t\t\t\t\t{(!collapsible ||\n\t\t\t\t\t\t\t\texpandedSections[section.title]) && (\n\t\t\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\t\t\tkey={`${section.title}-content`}\n\t\t\t\t\t\t\t\t\tinitial={{ height: 0, opacity: 0 }}\n\t\t\t\t\t\t\t\t\tanimate={{\n\t\t\t\t\t\t\t\t\t\theight: 'auto',\n\t\t\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t\t\t\ttransition: {\n\t\t\t\t\t\t\t\t\t\t\theight: {\n\t\t\t\t\t\t\t\t\t\t\t\tduration: 0.3,\n\t\t\t\t\t\t\t\t\t\t\t\tease: [0.04, 0.62, 0.23, 0.98]\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\topacity: {\n\t\t\t\t\t\t\t\t\t\t\t\tduration: 0.2,\n\t\t\t\t\t\t\t\t\t\t\t\tdelay: 0.1\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\texit={{\n\t\t\t\t\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\t\t\ttransition: {\n\t\t\t\t\t\t\t\t\t\t\theight: {\n\t\t\t\t\t\t\t\t\t\t\t\tduration: 0.3,\n\t\t\t\t\t\t\t\t\t\t\t\tease: [0.04, 0.62, 0.23, 0.98]\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\topacity: { duration: 0.2 }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName=\"overflow-hidden\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"overflow-x-auto\">\n\t\t\t\t\t\t\t\t\t\t<table className=\"w-full min-w-full table-fixed\">\n\t\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'border-b transition-colors',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentTheme.border,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentTheme.table\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.header\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ResizableHeader column=\"prop\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tProp\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ResizableHeader>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{showTypeColumn && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ResizableHeader column=\"type\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tType\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ResizableHeader>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{showDefaultColumn && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ResizableHeader column=\"default\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDefault\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ResizableHeader>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ResizableHeader column=\"description\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ResizableHeader>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'px-6 py-3 text-left text-xs font-medium uppercase tracking-wider',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentTheme.secondaryText,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCOLUMN_WIDTHS.actions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Empty header for actions column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t<tbody\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\tSPACING_CONFIG.prop[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinitialPropSpacing\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentTheme.divider\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{filteredProps.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(prop, propIndex) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={propIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'group transition-colors',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentTheme.hover,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentTheme\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.table.row,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprop.deprecated &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'opacity-60'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonPropClick?.(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprop.name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PropTableRow\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprop={prop}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTypeColumn={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTypeColumn\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowDefaultColumn={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowDefaultColumn\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowVersionBadges={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowVersionBadges\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowBetaBadges={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowBetaBadges\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopiedProp={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcopiedProp\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCopy={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleCopy\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcustomBadges={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcustomBadges\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttheme={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinitialTheme\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnWidths={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnWidths\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</AnimatePresence>\n\t\t\t\t\t</motion.div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\n// Separate component for the table row to keep the code organized\ntype PropTableRowProps = {\n\tprop: PropItem\n\tshowTypeColumn: boolean\n\tshowDefaultColumn: boolean\n\tshowVersionBadges: boolean\n\tshowBetaBadges: boolean\n\tcopiedProp: string | null\n\tonCopy: (text: string, propName: string) => void\n\tcustomBadges?: Record<string, { text: string; className: string }>\n\ttheme: ThemeOption\n\tcolumnWidths: ColumnWidth\n}\n\nfunction PropTableRow({\n\tprop,\n\tshowTypeColumn,\n\tshowDefaultColumn,\n\tshowVersionBadges,\n\tshowBetaBadges,\n\tcopiedProp,\n\tonCopy,\n\tcustomBadges,\n\ttheme,\n\tcolumnWidths\n}: PropTableRowProps) {\n\tconst [showDetails, setShowDetails] = useState(false)\n\tconst currentTheme = THEME_CONFIG[theme]\n\n\treturn (\n\t\t<>\n\t\t\t<td style={{ width: columnWidths.prop }} className=\"px-6 py-4\">\n\t\t\t\t<div className=\"flex items-center gap-2 overflow-hidden\">\n\t\t\t\t\t<TruncatedText\n\t\t\t\t\t\ttext={prop.name}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t'font-mono text-sm truncate shrink-0',\n\t\t\t\t\t\t\tcurrentTheme.text\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<DraggableBadges>\n\t\t\t\t\t\t{prop.required && (\n\t\t\t\t\t\t\t<span className=\"text-xs text-red-400 shrink-0\">\n\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{prop.type === 'function' && (\n\t\t\t\t\t\t\t<Pill variant=\"info\">Function</Pill>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{prop.type.includes('[]') && (\n\t\t\t\t\t\t\t<Pill variant=\"info\">Array</Pill>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{prop.deprecated && (\n\t\t\t\t\t\t\t<Pill variant=\"error\">Deprecated</Pill>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{showVersionBadges && prop.since && (\n\t\t\t\t\t\t\t<Pill variant=\"success\">v{prop.since}</Pill>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{showBetaBadges && prop.beta && (\n\t\t\t\t\t\t\t<Pill variant=\"beta\">Beta</Pill>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{prop.experimental && (\n\t\t\t\t\t\t\t<Pill variant=\"warning\">Experimental</Pill>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{prop.type.includes('Promise') && (\n\t\t\t\t\t\t\t<Pill variant=\"info\">Async</Pill>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{customBadges &&\n\t\t\t\t\t\t\tObject.entries(customBadges).map(\n\t\t\t\t\t\t\t\t([key, badge]) =>\n\t\t\t\t\t\t\t\t\tprop[key as keyof PropItem] && (\n\t\t\t\t\t\t\t\t\t\t<Pill\n\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\tclassName={badge.className}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{badge.text}\n\t\t\t\t\t\t\t\t\t\t</Pill>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</DraggableBadges>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t\t{showTypeColumn && (\n\t\t\t\t<td style={{ width: columnWidths.type }} className=\"px-6 py-4\">\n\t\t\t\t\t<div className=\"overflow-hidden\">\n\t\t\t\t\t\t<TruncatedText\n\t\t\t\t\t\t\ttext={prop.type}\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t'font-mono text-sm block truncate',\n\t\t\t\t\t\t\t\tcurrentTheme.code\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t)}\n\t\t\t{showDefaultColumn && (\n\t\t\t\t<td\n\t\t\t\t\tstyle={{ width: columnWidths.default }}\n\t\t\t\t\tclassName=\"px-6 py-4\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"overflow-hidden\">\n\t\t\t\t\t\t<TruncatedText\n\t\t\t\t\t\t\ttext={prop.defaultValue || '-'}\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t'font-mono text-sm block truncate',\n\t\t\t\t\t\t\t\tcurrentTheme.secondaryText\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t)}\n\t\t\t<td\n\t\t\t\tstyle={{ width: columnWidths.description }}\n\t\t\t\tclassName=\"px-6 py-4\"\n\t\t\t>\n\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t<div className=\"flex items-start gap-2\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t'text-sm line-clamp-2',\n\t\t\t\t\t\t\t\tcurrentTheme.secondaryText\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{prop.description}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{prop.link && (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={prop.link}\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\tclassName=\"text-blue-400 hover:text-blue-300 transition-colors shrink-0\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ExternalLink size={14} />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Expandable details section */}\n\t\t\t\t\t{(prop.example ||\n\t\t\t\t\t\tprop.notes?.length ||\n\t\t\t\t\t\tprop.values?.length ||\n\t\t\t\t\t\tprop.changelog?.length) && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => setShowDetails(!showDetails)}\n\t\t\t\t\t\t\tclassName=\"text-xs text-blue-400 hover:text-blue-300 transition-colors\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showDetails ? 'Hide details' : 'Show details'}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<AnimatePresence initial={false} mode=\"sync\">\n\t\t\t\t\t\t{showDetails && (\n\t\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\t\t{...DETAILS_ANIMATION}\n\t\t\t\t\t\t\t\tclassName=\"overflow-hidden\"\n\t\t\t\t\t\t\t\tlayout\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\t\t\t\texit={{ opacity: 0 }}\n\t\t\t\t\t\t\t\t\ttransition={{ duration: 0.2 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"space-y-3 pt-2\">\n\t\t\t\t\t\t\t\t\t\t{prop.example && (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-sm font-mono p-2 rounded bg-zinc-800/50 border border-zinc-700\">\n\t\t\t\t\t\t\t\t\t\t\t\t{prop.example}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{prop.values &&\n\t\t\t\t\t\t\t\t\t\t\tprop.values.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"space-y-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-xs font-medium text-zinc-400\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Pill variant=\"default\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPossible Values\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Pill>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"grid grid-cols-2 gap-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{prop.values.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(value, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<code className=\"text-purple-400\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{value.description && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-zinc-500 text-xs mt-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.description\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{prop.notes &&\n\t\t\t\t\t\t\t\t\t\t\tprop.notes.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{prop.notes.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(note, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex items-start gap-2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Pill\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"warning\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-0.5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNote\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Pill>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-sm text-zinc-400\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{note}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{prop.changelog &&\n\t\t\t\t\t\t\t\t\t\t\tprop.changelog.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"space-y-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-xs font-medium text-zinc-400\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Pill variant=\"default\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tChangelog\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Pill>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{prop.changelog.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(log, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm flex items-center gap-2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Pill variant=\"info\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlog.version\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Pill>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-zinc-400\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlog.changes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</AnimatePresence>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t\t<td style={{ width: columnWidths.actions }} className=\"px-6 py-4\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\tonCopy(prop.name, prop.name)\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"opacity-0 group-hover:opacity-100 transition-opacity\"\n\t\t\t\t>\n\t\t\t\t\t{copiedProp === prop.name ? (\n\t\t\t\t\t\t<Check size={14} className=\"text-green-400\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Copy\n\t\t\t\t\t\t\tsize={14}\n\t\t\t\t\t\t\tclassName=\"text-zinc-400 hover:text-zinc-300\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</>\n\t)\n}\n",
							language: 'typescript'
						},
						{
							name: 'code-block',
							type: 'directory',
							children: [
								{
									name: 'animations.ts',
									type: 'file',
									content:
										"export const ANIMATION_VARIANTS = {\n\tcollapsed: {\n\t\theight: 0,\n\t\topacity: 0,\n\t\ttransition: {\n\t\t\theight: { duration: 0.4, ease: [0.16, 1, 0.3, 1] },\n\t\t\topacity: { duration: 0.3, ease: [0.16, 1, 0.3, 1] }\n\t\t}\n\t},\n\texpanded: {\n\t\theight: 'auto',\n\t\topacity: 1,\n\t\ttransition: {\n\t\t\theight: { duration: 0.4, ease: [0.16, 1, 0.3, 1] },\n\t\t\topacity: { duration: 0.3, ease: [0.16, 1, 0.3, 1] }\n\t\t}\n\t}\n}\n\nexport const COPY_VARIANTS = {\n\tinitial: { opacity: 0, scale: 0.96 },\n\tanimate: {\n\t\topacity: 1,\n\t\tscale: 1,\n\t\ttransition: { duration: 0.2, ease: [0.16, 1, 0.3, 1] }\n\t},\n\texit: {\n\t\topacity: 0,\n\t\tscale: 0.96,\n\t\ttransition: { duration: 0.2, ease: [0.16, 1, 0.3, 1] }\n\t}\n}\n\nexport const TOAST_VARIANTS = {\n\thidden: {\n\t\topacity: 0,\n\t\ty: -20,\n\t\tscale: 0.95,\n\t\ttransition: { duration: 0.2, ease: [0.16, 1, 0.3, 1] }\n\t},\n\tvisible: {\n\t\topacity: 1,\n\t\ty: 0,\n\t\tscale: 1,\n\t\ttransition: { duration: 0.4, ease: [0.16, 1, 0.3, 1] }\n\t}\n}\n",
									language: 'typescript'
								},
								{
									name: 'code-block.tsx',
									type: 'file',
									content:
										"'use client'\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport {\n\tArrowDown,\n\tArrowUp,\n\tCheck,\n\tCheckCircle2,\n\tChevronDown,\n\tCopy,\n\tCode as DefaultIcon,\n\tFile,\n\tSearch,\n\tX\n} from 'lucide-react'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport { PrismAsyncLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { cn } from '../../lib/utils'\n\nimport { Button } from '../../../@/components/ui/button'\nimport { ANIMATION_VARIANTS, COPY_VARIANTS, TOAST_VARIANTS } from './animations'\nimport { customTheme } from './custom-theme'\nimport * as Icons from './icons'\n\nfunction getLanguageIcon(language: string) {\n\tswitch (language.toLowerCase()) {\n\t\tcase 'typescript':\n\t\t\treturn <Icons.TypescriptIcon size={16} />\n\t\tcase 'python':\n\t\t\treturn <Icons.PythonIcon size={16} />\n\t\tcase 'rust':\n\t\t\treturn <Icons.RustIcon size={16} />\n\t\tcase 'sql':\n\t\t\treturn <Icons.SqlLogo size={16} />\n\t\tcase 'drizzle':\n\t\t\treturn <Icons.SqlLogo size={16} />\n\t\tdefault:\n\t\t\treturn <DefaultIcon size={16} />\n\t}\n}\n\nfunction calculateCodeStats(code: string) {\n\tif (typeof code !== 'string') {\n\t\tconsole.error(\n\t\t\t'Expected code to be a string, but received:',\n\t\t\ttypeof code\n\t\t)\n\t\treturn { lines: 0, chars: 0, words: 0 } // Return default stats if code is not a string\n\t}\n\n\tconst lines = code.split('\\n').length\n\tconst chars = code.length\n\tconst words = code.trim().split(/\\s+/).length\n\treturn { lines, chars, words }\n}\n\ntype BadgeVariant =\n\t| 'default'\n\t| 'primary'\n\t| 'secondary'\n\t| 'success'\n\t| 'warning'\n\t| 'danger'\n\t| 'custom'\n\ninterface BadgeProps {\n\tvariant?: BadgeVariant\n\tcustomColor?: string\n}\n\nfunction getBadgeClasses({\n\tvariant = 'default',\n\tcustomColor\n}: BadgeProps): string {\n\tconst baseClasses =\n\t\t'px-2 py-0.5 text-xs font-medium rounded-full transition-all duration-200'\n\n\tif (variant === 'custom' && customColor) {\n\t\treturn `${baseClasses} border border-${customColor}-500/30 bg-${customColor}-500/10 text-${customColor}-400 hover:border-${customColor}-400 hover:text-${customColor}-300`\n\t}\n\n\tswitch (variant) {\n\t\tcase 'primary':\n\t\t\treturn `${baseClasses} border border-blue-500/30 bg-blue-500/10 text-blue-400 hover:border-blue-400 hover:text-blue-300`\n\t\tcase 'secondary':\n\t\t\treturn `${baseClasses} border border-purple-500/30 bg-purple-500/10 text-purple-400 hover:border-purple-400 hover:text-purple-300`\n\t\tcase 'success':\n\t\t\treturn `${baseClasses} border border-green-500/30 bg-green-500/10 text-green-400 hover:border-green-400 hover:text-green-300`\n\t\tcase 'warning':\n\t\t\treturn `${baseClasses} border border-yellow-500/30 bg-yellow-500/10 text-yellow-400 hover:border-yellow-400 hover:text-yellow-300`\n\t\tcase 'danger':\n\t\t\treturn `${baseClasses} border border-red-500/30 bg-red-500/10 text-red-400 hover:border-red-400 hover:text-red-300`\n\t\tdefault:\n\t\t\treturn `${baseClasses} border border-[#333333] bg-[#111111] text-zinc-400 hover:border-[#444444] hover:text-zinc-300`\n\t}\n}\n\ntype Badge = {\n\ttext: string\n\tvariant: BadgeVariant\n}\n\nexport type CodeBlockProps = {\n\tcode: string\n\tlanguage: string\n\tfileName?: string\n\tbadges?: Badge[]\n\tshowLineNumbers?: boolean\n\tenableLineHighlight?: boolean\n\tshowMetaInfo?: boolean\n\tmaxHeight?: string\n\tclassName?: string\n\tonCopy?: (code: string) => void\n\tonLineClick?: (lineNumber: number) => void\n\tonSearch?: (query: string, results: number[]) => void\n\tbadgeVariant?: BadgeVariant\n\tbadgeColor?: string\n\tfileNameColor?: string\n\tinitialSearchQuery?: string\n\tinitialSearchResults?: number[]\n\tinitialHighlightedLines?: number[]\n}\n\nexport function CodeBlock({\n\tcode,\n\tlanguage,\n\tfileName,\n\tbadges = [],\n\tshowLineNumbers = true,\n\tenableLineHighlight = false,\n\tshowMetaInfo = true,\n\tmaxHeight = '900px',\n\tonCopy,\n\tonLineClick,\n\tonSearch,\n\tbadgeVariant = 'default',\n\tbadgeColor,\n\tfileNameColor,\n\tinitialSearchQuery = '',\n\tinitialSearchResults = [],\n\tinitialHighlightedLines = []\n}: CodeBlockProps) {\n\tconst [isCollapsed, setIsCollapsed] = useState(false)\n\tconst [isCopied, setIsCopied] = useState(false)\n\tconst [isHovered, setIsHovered] = useState(false)\n\tconst [isSearching, setIsSearching] = useState(!!initialSearchQuery)\n\tconst [searchQuery, setSearchQuery] = useState(initialSearchQuery)\n\tconst [searchResults, setSearchResults] =\n\t\tuseState<number[]>(initialSearchResults)\n\tconst [currentResultIndex, setCurrentResultIndex] = useState(\n\t\tinitialSearchResults.length > 0 ? 0 : -1\n\t)\n\tconst [highlightedLines, setHighlightedLines] = useState<number[]>(\n\t\tinitialHighlightedLines\n\t)\n\tconst [stats] = useState(calculateCodeStats(code))\n\tconst codeRef = useRef<HTMLDivElement>(null)\n\n\tconst scrollToLine = useCallback((lineNumber: number) => {\n\t\tif (!codeRef.current) return\n\n\t\tconst lineElement = codeRef.current.querySelector(\n\t\t\t`[data-line-number=\"${lineNumber}\"]`\n\t\t)\n\t\tif (lineElement) {\n\t\t\tlineElement.scrollIntoView({ behavior: 'smooth', block: 'center' })\n\t\t}\n\t}, [])\n\n\tconst handleSearch = useCallback(\n\t\t(query: string) => {\n\t\t\tsetSearchQuery(query)\n\t\t\tif (!query) {\n\t\t\t\tsetSearchResults([])\n\t\t\t\tsetCurrentResultIndex(-1)\n\t\t\t\tsetHighlightedLines([])\n\t\t\t\tonSearch?.('', [])\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst lines = code.split('\\n')\n\t\t\tconst matches = lines.reduce((acc, line, index) => {\n\t\t\t\tif (line.toLowerCase().includes(query.toLowerCase())) {\n\t\t\t\t\tacc.push(index + 1)\n\t\t\t\t}\n\t\t\t\treturn acc\n\t\t\t}, [] as number[])\n\n\t\t\tsetSearchResults(matches)\n\t\t\tsetCurrentResultIndex(matches.length > 0 ? 0 : -1)\n\t\t\tsetHighlightedLines(matches)\n\t\t\tonSearch?.(query, matches)\n\n\t\t\tif (matches.length > 0) {\n\t\t\t\tscrollToLine(matches[0])\n\t\t\t}\n\t\t},\n\t\t[code, onSearch, scrollToLine]\n\t)\n\n\tuseEffect(() => {\n\t\thandleSearch(searchQuery)\n\t}, [searchQuery, handleSearch])\n\n\tconst copyToClipboard = useCallback(async () => {\n\t\ttry {\n\t\t\tawait navigator.clipboard.writeText(code)\n\t\t\tsetIsCopied(true)\n\t\t\tonCopy?.(code)\n\t\t\tsetTimeout(() => setIsCopied(false), 2000)\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to copy:', error)\n\t\t}\n\t}, [code, onCopy])\n\n\tconst goToNextResult = useCallback(() => {\n\t\tif (searchResults.length === 0) return\n\t\tconst nextIndex = (currentResultIndex + 1) % searchResults.length\n\t\tsetCurrentResultIndex(nextIndex)\n\t\tscrollToLine(searchResults[nextIndex])\n\t}, [searchResults, currentResultIndex, scrollToLine])\n\n\tconst goToPreviousResult = useCallback(() => {\n\t\tif (searchResults.length === 0) return\n\t\tconst prevIndex =\n\t\t\tcurrentResultIndex - 1 < 0\n\t\t\t\t? searchResults.length - 1\n\t\t\t\t: currentResultIndex - 1\n\t\tsetCurrentResultIndex(prevIndex)\n\t\tscrollToLine(searchResults[prevIndex])\n\t}, [searchResults, currentResultIndex, scrollToLine])\n\n\tuseEffect(() => {\n\t\tfunction handleKeyboard(e: KeyboardEvent) {\n\t\t\tif ((e.metaKey || e.ctrlKey) && e.key === 'c') {\n\t\t\t\tcopyToClipboard()\n\t\t\t}\n\n\t\t\tif ((e.metaKey || e.ctrlKey) && e.key === 'f' && !isCollapsed) {\n\t\t\t\te.preventDefault()\n\t\t\t\tsetIsSearching(true)\n\t\t\t}\n\n\t\t\tif (isSearching && searchResults.length > 0) {\n\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\tif (e.shiftKey) {\n\t\t\t\t\t\tgoToPreviousResult()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgoToNextResult()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (e.key === 'Escape') {\n\t\t\t\tsetHighlightedLines([])\n\t\t\t\tsetIsSearching(false)\n\t\t\t\tsetSearchQuery('')\n\t\t\t\tsetSearchResults([])\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener('keydown', handleKeyboard)\n\t\treturn () => window.removeEventListener('keydown', handleKeyboard)\n\t}, [\n\t\tisCollapsed,\n\t\tisSearching,\n\t\tsearchResults,\n\t\tcurrentResultIndex,\n\t\tcopyToClipboard,\n\t\tgoToNextResult,\n\t\tgoToPreviousResult\n\t])\n\n\tconst handleLineClick = useCallback(\n\t\t(lineNumber: number) => {\n\t\t\tif (enableLineHighlight) {\n\t\t\t\tsetHighlightedLines((prev) =>\n\t\t\t\t\tprev.includes(lineNumber)\n\t\t\t\t\t\t? prev.filter((line) => line !== lineNumber)\n\t\t\t\t\t\t: [...prev, lineNumber]\n\t\t\t\t)\n\t\t\t\tonLineClick?.(lineNumber)\n\t\t\t}\n\t\t},\n\t\t[enableLineHighlight, onLineClick]\n\t)\n\n\tfunction renderSearchUI() {\n\t\tif (!isSearching) return null\n\n\t\treturn (\n\t\t\t<div className=\"flex items-center gap-2 bg-[#111111] rounded-lg border border-[#333333] p-1 h-8\">\n\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\tclassName=\"w-40 px-2 py-1 text-sm bg-transparent text-zinc-300 focus:outline-none placeholder:text-zinc-600\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t/>\n\t\t\t\t\t{searchQuery && (\n\t\t\t\t\t\t<div className=\"absolute right-2 top-1/2 -translate-y-1/2 text-xs text-zinc-500\">\n\t\t\t\t\t\t\t{searchResults.length > 0 ? (\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{currentResultIndex + 1}/\n\t\t\t\t\t\t\t\t\t{searchResults.length}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span>No results</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{searchResults.length > 0 && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"h-4 w-[1px] bg-[#333333]\" />\n\t\t\t\t\t\t<div className=\"flex items-center gap-1\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\t\tonClick={goToPreviousResult}\n\t\t\t\t\t\t\t\tclassName=\"h-6 w-6 text-zinc-500 hover:text-zinc-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ArrowUp size={14} />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\t\tonClick={goToNextResult}\n\t\t\t\t\t\t\t\tclassName=\"h-6 w-6 text-zinc-500 hover:text-zinc-300\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ArrowDown size={14} />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t<div className=\"h-4 w-[1px] bg-[#333333]\" />\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetIsSearching(false)\n\t\t\t\t\t\tsetSearchQuery('')\n\t\t\t\t\t\tsetSearchResults([])\n\t\t\t\t\t\tsetHighlightedLines([])\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"h-6 w-6 text-zinc-500 hover:text-zinc-300\"\n\t\t\t\t>\n\t\t\t\t\t<X size={14} />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"relative\">\n\t\t\t<div\n\t\t\t\tclassName=\"group relative rounded-xl overflow-hidden bg-[#0A0A0A] dark:bg-[#0A0A0A] border border-[#333333] dark:border-[#333333] w-full transition-all duration-200\"\n\t\t\t\tonMouseEnter={() => setIsHovered(true)}\n\t\t\t\tonMouseLeave={() => setIsHovered(false)}\n\t\t\t>\n\t\t\t\t<div className=\"flex justify-between items-center px-4 py-2.5 bg-[#0A0A0A] dark:bg-[#0A0A0A] border-b border-[#333333]\">\n\t\t\t\t\t<div className=\"flex items-center gap-3\">\n\t\t\t\t\t\t<span className=\"text-zinc-500 dark:text-zinc-500 transition-colors duration-200 group-hover:text-zinc-400\">\n\t\t\t\t\t\t\t{getLanguageIcon(language)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{fileName && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t'flex items-center gap-2 rounded-full px-3 py-1 border transition-all duration-200',\n\t\t\t\t\t\t\t\t\tfileNameColor\n\t\t\t\t\t\t\t\t\t\t? `border-${fileNameColor}-500/30 bg-${fileNameColor}-500/10 text-${fileNameColor}-400 group-hover:border-${fileNameColor}-400 group-hover:text-${fileNameColor}-300`\n\t\t\t\t\t\t\t\t\t\t: 'bg-[#111111] border-[#333333] group-hover:border-[#444444]'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<File\n\t\t\t\t\t\t\t\t\tsize={12}\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tfileNameColor\n\t\t\t\t\t\t\t\t\t\t\t? `text-${fileNameColor}-400`\n\t\t\t\t\t\t\t\t\t\t\t: 'text-zinc-400'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t'text-sm font-medium transition-colors duration-200',\n\t\t\t\t\t\t\t\t\t\tfileNameColor\n\t\t\t\t\t\t\t\t\t\t\t? `text-${fileNameColor}-400 group-hover:text-${fileNameColor}-300`\n\t\t\t\t\t\t\t\t\t\t\t: 'text-zinc-400 group-hover:text-zinc-300'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{fileName}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t{badges.map((badge, index) => (\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tclassName={getBadgeClasses({\n\t\t\t\t\t\t\t\t\t\tvariant: badge.variant || badgeVariant,\n\t\t\t\t\t\t\t\t\t\tcustomColor: badgeColor\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{badge.text}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{showMetaInfo && (\n\t\t\t\t\t\t\t\t<span className=\"px-2 py-0.5 text-xs font-medium text-zinc-500\">\n\t\t\t\t\t\t\t\t\t{stats.lines} lines • {stats.words} words\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"flex items-center space-x-1.5 h-8\">\n\t\t\t\t\t\t{renderSearchUI()}\n\n\t\t\t\t\t\t{!isSearching && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\t\tonClick={() => setIsSearching(true)}\n\t\t\t\t\t\t\t\tclassName=\"relative h-8 w-8 text-zinc-500 hover:text-zinc-200 rounded-md transition-all duration-200 hover:bg-white/10\"\n\t\t\t\t\t\t\t\ttitle=\"Search (⌘/Ctrl + F)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Search size={16} />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\tonClick={() => setIsCollapsed(!isCollapsed)}\n\t\t\t\t\t\t\tclassName=\"relative h-8 w-8 text-zinc-500 hover:text-zinc-200 rounded-md transition-all duration-200 hover:bg-white/10\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\t\tinitial={false}\n\t\t\t\t\t\t\t\tanimate={{ rotate: isCollapsed ? 0 : 180 }}\n\t\t\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\t\t\tduration: 0.4,\n\t\t\t\t\t\t\t\t\tease: [0.16, 1, 0.3, 1]\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ChevronDown size={16} />\n\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\tonClick={copyToClipboard}\n\t\t\t\t\t\t\tclassName=\"relative h-8 w-8 text-zinc-500 hover:text-zinc-200 rounded-md transition-all duration-200 hover:bg-white/10\"\n\t\t\t\t\t\t\ttitle=\"Copy code (⌘/Ctrl + C)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AnimatePresence mode=\"wait\">\n\t\t\t\t\t\t\t\t{isCopied ? (\n\t\t\t\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\t\t\t\tkey=\"check\"\n\t\t\t\t\t\t\t\t\t\tvariants={COPY_VARIANTS}\n\t\t\t\t\t\t\t\t\t\tinitial=\"initial\"\n\t\t\t\t\t\t\t\t\t\tanimate=\"animate\"\n\t\t\t\t\t\t\t\t\t\texit=\"exit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-emerald-400\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Check size={16} />\n\t\t\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Copy size={16} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AnimatePresence>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<AnimatePresence initial={false}>\n\t\t\t\t\t{!isCollapsed && (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tinitial=\"collapsed\"\n\t\t\t\t\t\t\tanimate=\"expanded\"\n\t\t\t\t\t\t\texit=\"collapsed\"\n\t\t\t\t\t\t\tvariants={ANIMATION_VARIANTS}\n\t\t\t\t\t\t\tclassName=\"overflow-hidden\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"relative\" ref={codeRef}>\n\t\t\t\t\t\t\t\t{showLineNumbers && (\n\t\t\t\t\t\t\t\t\t<div className=\"absolute left-0 top-0 bottom-0 w-[3.5rem] bg-gradient-to-r from-[#0A0A0A] via-[#0A0A0A]/50 to-transparent pointer-events-none z-10\" />\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"p-4 overflow-y-auto\"\n\t\t\t\t\t\t\t\t\tstyle={{ maxHeight }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<SyntaxHighlighter\n\t\t\t\t\t\t\t\t\t\tlanguage={language.toLowerCase()}\n\t\t\t\t\t\t\t\t\t\tstyle={customTheme}\n\t\t\t\t\t\t\t\t\t\tcustomStyle={{\n\t\t\t\t\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\t\t\t\t\tbackground: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\tfontSize: '0.875rem'\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tshowLineNumbers={showLineNumbers}\n\t\t\t\t\t\t\t\t\t\tlineNumberStyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: '#666666',\n\t\t\t\t\t\t\t\t\t\t\tminWidth: '2.5em',\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: '1em',\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'right',\n\t\t\t\t\t\t\t\t\t\t\tuserSelect: 'none',\n\t\t\t\t\t\t\t\t\t\t\topacity: isHovered ? 1 : 0.5,\n\t\t\t\t\t\t\t\t\t\t\ttransition: 'opacity 0.2s ease'\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\twrapLines={true}\n\t\t\t\t\t\t\t\t\t\twrapLongLines={true}\n\t\t\t\t\t\t\t\t\t\tlineProps={(lineNumber) => ({\n\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\t\t\t\t\t\t\t\tcursor: enableLineHighlight\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'pointer'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'default',\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\t\t\t\t\thighlightedLines.includes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineNumber\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'rgba(255, 255, 255, 0.1)'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'transparent'\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\t\t\t\t\t\thandleLineClick(lineNumber)\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{code}\n\t\t\t\t\t\t\t\t\t</SyntaxHighlighter>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t)}\n\t\t\t\t</AnimatePresence>\n\t\t\t</div>\n\n\t\t\t<AnimatePresence>\n\t\t\t\t{isCopied && (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tinitial=\"hidden\"\n\t\t\t\t\t\tanimate=\"visible\"\n\t\t\t\t\t\texit=\"hidden\"\n\t\t\t\t\t\tvariants={TOAST_VARIANTS}\n\t\t\t\t\t\tclassName=\"absolute top-3 right-3 flex items-center gap-2 px-3 py-2 rounded-lg bg-[#1A1A1A] border border-[#333333] shadow-lg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<CheckCircle2 className=\"w-4 h-4 text-emerald-400\" />\n\t\t\t\t\t\t<span className=\"text-sm font-medium text-zinc-200\">\n\t\t\t\t\t\t\tCopied to clipboard\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</motion.div>\n\t\t\t\t)}\n\t\t\t</AnimatePresence>\n\t\t</div>\n\t)\n}\n",
									language: 'typescript'
								},
								{
									name: 'custom-theme.ts',
									type: 'file',
									content:
										"import { CSSProperties } from 'react'\n\ntype CustomTheme = {\n\t[key: string]: CSSProperties\n}\n\nexport const customTheme: CustomTheme = {\n\t'code[class*=\"language-\"]': {\n\t\tcolor: '#f1f5f9',\n\t\tbackground: 'none',\n\t\tfontFamily:\n\t\t\t'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n\t\ttextAlign: 'left',\n\t\twhiteSpace: 'pre',\n\t\twordSpacing: 'normal',\n\t\twordBreak: 'normal',\n\t\twordWrap: 'normal',\n\t\tlineHeight: '1.5',\n\t\tfontSize: '14px',\n\t\ttabSize: 2,\n\t\thyphens: 'none'\n\t},\n\t'pre[class*=\"language-\"]': {\n\t\tcolor: '#f1f5f9',\n\t\tbackground: 'none',\n\t\tfontFamily:\n\t\t\t'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n\t\ttextAlign: 'left',\n\t\twhiteSpace: 'pre',\n\t\twordSpacing: 'normal',\n\t\twordBreak: 'normal',\n\t\twordWrap: 'normal',\n\t\tlineHeight: '1.5',\n\t\tfontSize: '14px',\n\t\ttabSize: 2,\n\t\thyphens: 'none',\n\t\tpadding: '1em',\n\t\tmargin: '0.5em 0',\n\t\toverflow: 'auto'\n\t},\n\tcomment: {\n\t\tcolor: '#636e7b',\n\t\tfontStyle: 'italic'\n\t},\n\t'block-comment': {\n\t\tcolor: '#636e7b',\n\t\tfontStyle: 'italic'\n\t},\n\tprolog: {\n\t\tcolor: '#636e7b'\n\t},\n\tdoctype: {\n\t\tcolor: '#636e7b'\n\t},\n\tcdata: {\n\t\tcolor: '#636e7b'\n\t},\n\tpunctuation: {\n\t\tcolor: '#94a3b8'\n\t},\n\ttag: {\n\t\tcolor: '#f472b6'\n\t},\n\t'attr-name': {\n\t\tcolor: '#f472b6'\n\t},\n\tnamespace: {\n\t\tcolor: '#f472b6'\n\t},\n\tdeleted: {\n\t\tcolor: '#ef4444'\n\t},\n\t'function-name': {\n\t\tcolor: '#60a5fa'\n\t},\n\tboolean: {\n\t\tcolor: '#c084fc'\n\t},\n\tnumber: {\n\t\tcolor: '#c084fc'\n\t},\n\tfunction: {\n\t\tcolor: '#60a5fa'\n\t},\n\tproperty: {\n\t\tcolor: '#f472b6'\n\t},\n\t'class-name': {\n\t\tcolor: '#93c5fd'\n\t},\n\tconstant: {\n\t\tcolor: '#c084fc'\n\t},\n\tsymbol: {\n\t\tcolor: '#f472b6'\n\t},\n\tselector: {\n\t\tcolor: '#a5b4fc'\n\t},\n\timportant: {\n\t\tcolor: '#f472b6',\n\t\tfontWeight: 'bold'\n\t},\n\tatrule: {\n\t\tcolor: '#f472b6'\n\t},\n\tkeyword: {\n\t\tcolor: '#f472b6'\n\t},\n\tbuiltin: {\n\t\tcolor: '#93c5fd'\n\t},\n\tstring: {\n\t\tcolor: '#a5b4fc'\n\t},\n\tchar: {\n\t\tcolor: '#a5b4fc'\n\t},\n\t'attr-value': {\n\t\tcolor: '#a5b4fc'\n\t},\n\tregex: {\n\t\tcolor: '#f472b6'\n\t},\n\tvariable: {\n\t\tcolor: '#f1f5f9'\n\t},\n\toperator: {\n\t\tcolor: '#94a3b8'\n\t},\n\tentity: {\n\t\tcolor: '#f472b6',\n\t\tcursor: 'help'\n\t},\n\turl: {\n\t\tcolor: '#94a3b8'\n\t},\n\tbold: {\n\t\tfontWeight: 'bold'\n\t},\n\titalic: {\n\t\tfontStyle: 'italic'\n\t},\n\tinserted: {\n\t\tcolor: '#34d399'\n\t}\n}\n",
									language: 'typescript'
								},
								{
									name: 'file-name-label.tsx',
									type: 'file',
									content:
										"import { File } from 'lucide-react'\nimport { cn } from '../../lib/utils'\n\ninterface FileNameLabelProps {\n\tfileName: string\n\tcolor?: string\n}\n\nexport function FileNameLabel({ fileName, color }: FileNameLabelProps) {\n\tconst baseClasses =\n\t\t'flex items-center gap-2 rounded-full px-3 py-1 border transition-all duration-200'\n\tconst colorClasses = color\n\t\t? `border-${color}-500/30 bg-${color}-500/10 text-${color}-400 hover:border-${color}-400 hover:text-${color}-300`\n\t\t: 'bg-[#111111] border-[#333333] hover:border-[#444444]'\n\n\treturn (\n\t\t<div className={cn(baseClasses, colorClasses)}>\n\t\t\t<File\n\t\t\t\tsize={12}\n\t\t\t\tclassName={color ? `text-${color}-400` : 'text-zinc-400'}\n\t\t\t/>\n\t\t\t<span\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'text-sm font-medium transition-colors duration-200',\n\t\t\t\t\tcolor\n\t\t\t\t\t\t? `text-${color}-400 hover:text-${color}-300`\n\t\t\t\t\t\t: 'text-zinc-400 hover:text-zinc-300'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{fileName}\n\t\t\t</span>\n\t\t</div>\n\t)\n}\n",
									language: 'typescript'
								},
								{
									name: 'icons.tsx',
									type: 'file',
									content:
										'\'use client\'\n\ntype IconProps = {\n\tclassName?: string\n\tsize?: number\n}\n\nconst DEFAULT_ICON_SIZE = 16\n\nexport function SqlLogo({\n\tclassName = \'\',\n\tsize = DEFAULT_ICON_SIZE\n}: IconProps) {\n\treturn (\n\t\t<svg\n\t\t\txmlns="http://www.w3.org/2000/svg"\n\t\t\tfill="#fff"\n\t\t\tfillRule="evenodd"\n\t\t\tstroke="#000"\n\t\t\tstrokeLinecap="round"\n\t\t\tstrokeLinejoin="round"\n\t\t\tviewBox="0 0 61 81"\n\t\t\tclassName={className}\n\t\t\twidth={size}\n\t\t\theight={size}\n\t\t>\n\t\t\t<use x="0.5" y="0.5" xlinkHref="#A" />\n\t\t\t<symbol id="A" overflow="visible">\n\t\t\t\t<g fill="#0072c6" stroke="none">\n\t\t\t\t\t<path d="M0 10.929v58.14C0 75.106 13.432 80 30 80V10.929H0z" />\n\t\t\t\t\t<use xlinkHref="#C" />\n\t\t\t\t</g>\n\t\t\t\t<use stroke="none" opacity="0.15" xlinkHref="#C" />\n\t\t\t\t<path\n\t\t\t\t\tstroke="none"\n\t\t\t\t\td="M60 10.929c0 6.036-13.432 10.929-30 10.929S0 16.965 0 10.929 13.432 0 30 0s30 4.893 30 10.929"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tfill="#7fba00"\n\t\t\t\t\tstroke="none"\n\t\t\t\t\td="M53.866 10.299c0 3.985-10.685 7.211-23.866 7.211S6.132 14.284 6.132 10.299 16.819 3.088 30 3.088s23.866 3.228 23.866 7.211"\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tfill="#b8d432"\n\t\t\t\t\tstroke="none"\n\t\t\t\t\td="M48.867 14.707c3.124-1.219 5.002-2.745 5.002-4.404C53.868 6.318 43.183 3.09 30 3.09S6.134 6.318 6.134 10.303c0 1.658 1.877 3.185 5.002 4.404 4.363-1.704 11.182-2.803 18.865-2.803s14.5 1.099 18.866 2.803"\n\t\t\t\t/>\n\t\t\t</symbol>\n\t\t\t<defs>\n\t\t\t\t<path\n\t\t\t\t\tid="C"\n\t\t\t\t\td="M29.589 79.999H30c16.568 0 30-4.892 30-10.929V10.93H29.589V80z"\n\t\t\t\t/>\n\t\t\t</defs>\n\t\t</svg>\n\t)\n}\n\nexport function RustIcon({ className = \'\' }: IconProps) {\n\treturn (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\twidth={36}\n\t\t\theight={36}\n\t\t\tviewBox="0 0 64 64"\n\t\t\tfill="none"\n\t\t\txmlns="http://www.w3.org/2000/svg"\n\t\t>\n\t\t\t<path\n\t\t\t\td="m47.781 31.608-1.343-.832a18.57 18.57 0 0 0-.038-.391l1.154-1.077a.46.46 0 0 0-.153-.771l-1.476-.552a16.798 16.798 0 0 0-.115-.381l.92-1.279a.462.462 0 0 0-.3-.727l-1.557-.253c-.06-.118-.123-.234-.187-.35l.654-1.435a.46.46 0 0 0-.437-.654l-1.579.055a12.482 12.482 0 0 0-.25-.302l.363-1.539a.461.461 0 0 0-.556-.556l-1.538.362c-.1-.084-.2-.167-.303-.25l.055-1.578a.46.46 0 0 0-.654-.437l-1.435.654a16.712 16.712 0 0 0-.35-.188l-.253-1.556a.462.462 0 0 0-.726-.301l-1.28.92a14.31 14.31 0 0 0-.38-.115l-.552-1.476a.461.461 0 0 0-.771-.154l-1.077 1.156c-.13-.014-.26-.028-.391-.038l-.832-1.344a.462.462 0 0 0-.786 0l-.832 1.344c-.13.01-.261.024-.391.038l-1.077-1.155a.464.464 0 0 0-.771.153l-.552 1.476c-.128.037-.255.076-.38.116l-.552 1.476a.46.46 0 0 0 .771.153l1.155-1.077c-.015.13-.028.26-.039.391l-1.343.832a.462.462 0 0 0 0 .786l1.343.831c.011.131.024.262.039.392l-1.155 1.077a.462.462 0 0 0 .153.771l1.155 1.077c-.014.13-.027.261-.039.392l-1.343.832a.462.462 0 0 0 0-.786l-1.343-.831c-.011-.131-.024-.262-.039-.392l1.077-1.155a.462.462 0 0 0-.771.153l-.552 1.476c-.037.128-.076.255-.116.38l.921 1.28a.462.462 0 0 0-.301.726l-1.556.253c-.061.118-.123.235-.188.35l.655 1.435a.46.46 0 0 0 .437.654l1.579-.055c.082.103.165.203.25.303l-.363 1.539a.46.46 0 0 0 .556.555l1.538-.362c.1.085.201.167.303.249l-.055 1.58a.461.461 0 0 0 .654.436l1.435-.654c.115.064.232.127.35.188l.253 1.555a.461.461 0 0 0 .727.302l1.279-.922c.126.04.253.08.38.116l.552 1.476a.46.46 0 0 0 .771.153l1.078-1.155c.13.015.26.028.391.04l.832 1.343a.463.463 0 0 0 .786 0l.831-1.344c.131-.011.262-.024.392-.039l1.077 1.155a.46.46 0 0 0 .77-.153l.553-1.476c.127-.036.254-.076.38-.116l1.28.922a.463.463 0 0 0 .726-.302l.254-1.556c.117-.06.233-.124.349-.187l1.435.654a.461.461 0 0 0 .654-.437l-.055-1.58c.102-.08.203-.163.303-.248l1.538.362a.46.46 0 0 0 .556-.555l-.362-1.539c.084-.1.167-.2.249-.303l1.58.055a.46.46 0 0 0 .436-.654l-.654-1.435c.064-.115.126-.232.187-.35l1.556-.253a.46.46 0 0 0 .301-.726l-.92-1.28a17.5 17.5 0 0 0 .115-.38l1.476-.552a.46.46 0 0 0 .153-.771l-1.155-1.077c.014-.13.027-.261.039-.392l1.343-.831a.462.462 0 0 0 0-.786zM38.79 42.752a.952.952 0 0 1 .399-1.861.952.952 0 0 1-.4 1.861zm-.457-3.087a.866.866 0 0 0-1.028.666l-.477 2.226A11.649 11.649 0 0 1 32 43.597c-1.76 0-3.43-.39-4.929-1.087l-.477-2.225a.866.866 0 0 0-1.028-.667l-1.965.422a11.68 11.68 0 0 1-1.016-1.197h9.561c.108 0 .18-.02.18-.118v-3.382c0-.099-.072-.118-.18-.118H29.35V33.08h3.024c.276 0 1.476.079 1.86 1.613.12.471.384 2.006.564 2.497.18.551.912 1.652 1.692 1.652h4.764a.977.977 0 0 0 .173-.017c-.33.449-.693.874-1.083 1.27l-2.01-.431zm-13.223 3.04a.952.952 0 0 1-.399-1.861.95.95 0 0 1 .398 1.862zm-3.627-14.707a.95.95 0 1 1-1.737.771.95.95 0 1 1 1.737-.771zm-1.115 2.643 2.047-.91a.868.868 0 0 0 .44-1.145l-.421-.953h1.658v7.474h-3.345a11.714 11.714 0 0 1-.38-4.466zm8.983-.726v-2.203h3.948c.204 0 1.44.236 1.44 1.16 0 .767-.948 1.043-1.728 1.043h-3.66zM43.7 31.898c0 .292-.011.581-.033.868h-1.2c-.12 0-.168.08-.168.197v.551c0 1.298-.732 1.58-1.373 1.652-.61.068-1.288-.256-1.371-.63-.36-2.025-.96-2.458-1.908-3.206 1.176-.746 2.4-1.848 2.4-3.323 0-1.593-1.092-2.596-1.836-3.088-1.044-.688-2.2-.826-2.512-.826H23.285a11.684 11.684 0 0 1 6.545-3.694l1.463 1.535c.331.346.88.36 1.225.028l1.638-1.566a11.71 11.71 0 0 1 8.009 5.704l-1.121 2.532a.869.869 0 0 0 .44 1.145l2.159.958c.037.383.056.77.056 1.163zM31.294 19.093a.95.95 0 0 1 1.344.031.952.952 0 0 1-.032 1.346.949.949 0 0 1-1.343-.032.953.953 0 0 1 .031-1.345zm11.123 8.951a.95.95 0 1 1 1.737.772.95.95 0 1 1-1.737-.772z"\n\t\t\t\tfill="#808080"\n\t\t\t/>\n\t\t</svg>\n\t)\n}\n\nexport function TypescriptIcon({\n\tclassName = \'\',\n\tsize = DEFAULT_ICON_SIZE\n}: IconProps) {\n\treturn (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\twidth={size}\n\t\t\theight={size}\n\t\t\tviewBox="0 0 512 512"\n\t\t\tfill="none"\n\t\t\txmlns="http://www.w3.org/2000/svg"\n\t\t>\n\t\t\t<rect fill="#3178c6" height="512" rx="50" width="512" />\n\t\t\t<path\n\t\t\t\tclipRule="evenodd"\n\t\t\t\td="m316.939 407.424v50.061c8.138 4.172 17.763 7.3 28.875 9.386s22.823 3.129 35.135 3.129c11.999 0 23.397-1.147 34.196-3.442 10.799-2.294 20.268-6.075 28.406-11.342 8.138-5.266 14.581-12.15 19.328-20.65s7.121-19.007 7.121-31.522c0-9.074-1.356-17.026-4.069-23.857s-6.625-12.906-11.738-18.225c-5.112-5.319-11.242-10.091-18.389-14.315s-15.207-8.213-24.18-11.967c-6.573-2.712-12.468-5.345-17.685-7.9-5.217-2.556-9.651-5.163-13.303-7.822-3.652-2.66-6.469-5.476-8.451-8.448-1.982-2.973-2.974-6.336-2.974-10.091 0-3.441.887-6.544 2.661-9.308s4.278-5.136 7.512-7.118c3.235-1.981 7.199-3.52 11.894-4.615 4.696-1.095 9.912-1.642 15.651-1.642 4.173 0 8.581.313 13.224.938 4.643.626 9.312 1.591 14.008 2.894 4.695 1.304 9.259 2.947 13.694 4.928 4.434 1.982 8.529 4.276 12.285 6.884v-46.776c-7.616-2.92-15.937-5.084-24.962-6.492s-19.381-2.112-31.066-2.112c-11.895 0-23.163 1.278-33.805 3.833s-20.006 6.544-28.093 11.967c-8.086 5.424-14.476 12.333-19.171 20.729-4.695 8.395-7.043 18.433-7.043 30.114 0 14.914 4.304 27.638 12.912 38.172 8.607 10.533 21.675 19.45 39.204 26.751 6.886 2.816 13.303 5.579 19.25 8.291s11.086 5.528 15.415 8.448c4.33 2.92 7.747 6.101 10.252 9.543 2.504 3.441 3.756 7.352 3.756 11.733 0 3.233-.783 6.231-2.348 8.995s-3.939 5.162-7.121 7.196-7.147 3.624-11.894 4.771c-4.748 1.148-10.303 1.721-16.668 1.721-10.851 0-21.597-1.903-32.24-5.71-10.642-3.806-20.502-9.516-29.579-17.13zm-84.159-123.342h64.22v-41.082h-179v41.082h63.906v182.918h50.874z"\n\t\t\t\tfill="#fff"\n\t\t\t\tfillRule="evenodd"\n\t\t\t/>\n\t\t</svg>\n\t)\n}\nexport function ReactIcon({\n\tclassName = \'\',\n\tsize = DEFAULT_ICON_SIZE\n}: IconProps) {\n\treturn (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\twidth={size}\n\t\t\theight={size}\n\t\t\tviewBox="-11.5 -10.23174 23 20.46348"\n\t\t\txmlns="http://www.w3.org/2000/svg"\n\t\t>\n\t\t\t<title>React Logo</title>\n\t\t\t<circle cx="0" cy="0" r="2.05" fill="#61dafb" />\n\t\t\t<g stroke="#61dafb" stroke-width="1" fill="none">\n\t\t\t\t<ellipse rx="11" ry="4.2" />\n\t\t\t\t<ellipse rx="11" ry="4.2" transform="rotate(60)" />\n\t\t\t\t<ellipse rx="11" ry="4.2" transform="rotate(120)" />\n\t\t\t</g>\n\t\t</svg>\n\t)\n}\nexport function MdxIcon({\n\tclassName = \'\',\n\tsize = DEFAULT_ICON_SIZE\n}: IconProps) {\n\treturn (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\twidth={size}\n\t\t\theight={size}\n\t\t\tviewBox="0 0 512 212"\n\t\t\txmlns="http://www.w3.org/2000/svg"\n\t\t>\n\t\t\t<path\n\t\t\t\td="m19.4782609 2.7826087h473.0434781c9.220754 0 16.695652 7.4748981 16.695652 16.6956522v172.5217391c0 9.220754-7.474898 16.695652-16.695652 16.695652h-473.0434781c-9.2207541 0-16.6956522-7.474898-16.6956522-16.695652v-172.5217391c0-9.2207541 7.4748981-16.6956522 16.6956522-16.6956522z"\n\t\t\t\tfill="#fff"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td="m19.4782609 0h473.0434781c10.757547 0 19.478261 8.72071444 19.478261 19.4782609v172.5217391c0 10.757546-8.720714 19.478261-19.478261 19.478261h-473.0434781c-10.75754646 0-19.4782609-8.720715-19.4782609-19.478261v-172.5217391c0-10.75754646 8.72071444-19.4782609 19.4782609-19.4782609zm0 5.56521739c-7.6839618 0-13.91304351 6.22908171-13.91304351 13.91304351v172.5217391c0 7.683962 6.22908171 13.913043 13.91304351 13.913043h473.0434781c7.683962 0 13.913044-6.229081 13.913044-13.913043v-172.5217391c0-7.6839618-6.229082-13.91304351-13.913044-13.91304351z"\n\t\t\t\tfill="#eaeaea"\n\t\t\t/>\n\t\t\t<path d="m272.695652 40.2031304-.001188 84.8955366 31.184061-31.17783 15.740225 15.741398-57.642 57.637704-58.368895-58.368895 15.740812-15.7408122 31.084927 31.0847822.001189-84.0718836z" />\n\t\t\t<path d="m72.1623188 162.979246v-65.7474391l40.2545062 40.2574121 40.559871-40.5569594v65.3828704h22.260869v-119.122636l-62.819607 62.815098-62.5165087-62.5210221v119.4926761z" />\n\t\t\t<path\n\t\t\t\td="m447.84683 36.6511988 15.740543 15.7410807-47.149576 47.1471988 45.698909 45.7002427-15.740543 15.74108-45.700511-45.699178-45.700511 45.699178-15.740543-15.74108 45.695199-45.7002427-47.145866-47.1471988 15.740543-15.7410807 47.151178 47.1461345z"\n\t\t\t\tfill="#f9ac00"\n\t\t\t/>\n\t\t</svg>\n\t)\n}\nexport function PythonIcon({\n\tclassName = \'\',\n\tsize = DEFAULT_ICON_SIZE\n}: IconProps) {\n\treturn (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\twidth={size}\n\t\t\theight={size}\n\t\t\tviewBox="0 0 64 64"\n\t\t\tfill="none"\n\t\t\txmlns="http://www.w3.org/2000/svg"\n\t\t>\n\t\t\t<title>Python Logo</title>\n\t\t\t<path\n\t\t\t\td="M31.885 16c-8.124 0-7.617 3.523-7.617 3.523l.01 3.65h7.752v1.095H21.197S16 23.678 16 31.876c0 8.196 4.537 7.906 4.537 7.906h2.708v-3.804s-.146-4.537 4.465-4.537h7.688s4.32.07 4.32-4.175v-7.019S40.374 16 31.885 16zm-4.275 2.454c.771 0 1.395.624 1.395 1.395s-.624 1.395-1.395 1.395a1.393 1.393 0 0 1-1.395-1.395c0-.771.624-1.395 1.395-1.395z"\n\t\t\t\tfill="url(#a)"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td="M32.115 47.833c8.124 0 7.617-3.523 7.617-3.523l-.01-3.65H31.97v-1.095h10.832S48 40.155 48 31.958c0-8.197-4.537-7.906-4.537-7.906h-2.708v3.803s.146 4.537-4.465 4.537h-7.688s-4.32-.07-4.32 4.175v7.019s-.656 4.247 7.833 4.247zm4.275-2.454a1.393 1.393 0 0 1-1.395-1.395c0-.77.624-1.394 1.395-1.394s1.395.623 1.395 1.394c0 .772-.624 1.395-1.395 1.395z"\n\t\t\t\tfill="url(#b)"\n\t\t\t/>\n\t\t\t<defs>\n\t\t\t\t<linearGradient\n\t\t\t\t\tid="a"\n\t\t\t\t\tx1="19.075"\n\t\t\t\t\ty1="18.782"\n\t\t\t\t\tx2="34.898"\n\t\t\t\t\ty2="34.658"\n\t\t\t\t\tgradientUnits="userSpaceOnUse"\n\t\t\t\t>\n\t\t\t\t\t<stop stop-color="#387EB8" />\n\t\t\t\t\t<stop offset="1" stop-color="#366994" />\n\t\t\t\t</linearGradient>\n\t\t\t\t<linearGradient\n\t\t\t\t\tid="b"\n\t\t\t\t\tx1="28.809"\n\t\t\t\t\ty1="28.882"\n\t\t\t\t\tx2="45.803"\n\t\t\t\t\ty2="45.163"\n\t\t\t\t\tgradientUnits="userSpaceOnUse"\n\t\t\t\t>\n\t\t\t\t\t<stop stop-color="#FFE052" />\n\t\t\t\t\t<stop offset="1" stop-color="#FFC331" />\n\t\t\t\t</linearGradient>\n\t\t\t</defs>\n\t\t</svg>\n\t)\n}\nexport function JavascriptIcon({\n\tclassName = \'\',\n\tsize = DEFAULT_ICON_SIZE\n}: IconProps) {\n\treturn (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\twidth={size}\n\t\t\theight={size}\n\t\t\tviewBox="0 0 256 256"\n\t\t\txmlns="http://www.w3.org/2000/svg"\n\t\t>\n\t\t\t<path d="m0 0h256v256h-256z" fill="#f7df1e" />\n\t\t\t<path d="m67.311746 213.932292 19.590908-11.856051c3.7794539 6.701105 7.2175746 12.370896 15.464432 12.370896 7.905117 0 12.88899-3.092318 12.88899-15.120254v-81.798096h24.057499v82.13821c0 24.917333-14.605816 36.258946-35.915175 36.258946-19.2451048 0-30.4164571-9.96734-36.0870603-21.995683" />\n\t\t\t<path d="m152.380952 211.354413 19.58847-11.341613c5.156572 8.421181 11.858489 14.607035 23.714946 14.607035 9.968153 0 16.324673-4.983873 16.324673-11.857676 0-8.248483-6.529625-11.170134-17.527873-15.980089l-6.012749-2.579505c-17.357206-7.387835-28.871111-16.667225-28.871111-36.257727 0-18.04353 13.7472-31.791543 35.228444-31.791543 15.294172 0 26.292013 5.327645 34.195911 19.247137l-18.731073 12.028343c-4.124444-7.388648-8.591034-10.309486-15.464431-10.309486-7.045689 0-11.513905 4.467809-11.513905 10.309486 0 7.217574 4.468216 10.139631 14.777702 14.607847l6.013968 2.577473c20.449524 8.764546 31.963428 17.699353 31.963428 37.804292 0 21.653537-17.012215 33.509588-39.86692 33.509588-22.339454 0-36.774603-10.653664-43.819073-24.573562" />\n\t\t</svg>\n\t)\n}\n',
									language: 'typescript'
								},
								{
									name: 'light-theme.ts',
									type: 'file',
									content:
										"export const customLightTheme = {\n\t'code[class*=\"language-\"]': {\n\t\tcolor: '#24292e',\n\t\tbackground: 'none',\n\t\tfontFamily: 'var(--font-geist-mono)',\n\t\tfontSize: '13px',\n\t\ttextAlign: 'left',\n\t\twhiteSpace: 'pre',\n\t\twordSpacing: 'normal',\n\t\twordBreak: 'normal',\n\t\twordWrap: 'normal',\n\t\tlineHeight: '1.5',\n\t\ttabSize: 4,\n\t\thyphens: 'none'\n\t},\n\t'pre[class*=\"language-\"]': {\n\t\tcolor: '#24292e',\n\t\tbackground: '#ffffff',\n\t\tpadding: '1em',\n\t\tmargin: '.5em 0',\n\t\toverflow: 'auto'\n\t},\n\tcomment: {\n\t\tcolor: '#6a737d',\n\t\tfontStyle: 'italic'\n\t},\n\tpunctuation: {\n\t\tcolor: '#24292e'\n\t},\n\tproperty: {\n\t\tcolor: '#005cc5'\n\t},\n\tstring: {\n\t\tcolor: '#032f62'\n\t},\n\tkeyword: {\n\t\tcolor: '#d73a49'\n\t},\n\t'class-name': {\n\t\tcolor: '#6f42c1'\n\t},\n\tfunction: {\n\t\tcolor: '#6f42c1'\n\t},\n\toperator: {\n\t\tcolor: '#d73a49'\n\t},\n\tnumber: {\n\t\tcolor: '#005cc5'\n\t},\n\t'attr-name': {\n\t\tcolor: '#005cc5'\n\t},\n\t'attr-value': {\n\t\tcolor: '#032f62'\n\t},\n\tparameter: {\n\t\tcolor: '#24292e'\n\t},\n\tselector: {\n\t\tcolor: '#22863a'\n\t},\n\tregex: {\n\t\tcolor: '#032f62'\n\t},\n\tvariable: {\n\t\tcolor: '#005cc5'\n\t},\n\tconstant: {\n\t\tcolor: '#005cc5'\n\t},\n\tbuiltin: {\n\t\tcolor: '#005cc5'\n\t}\n}\n",
									language: 'typescript'
								}
							]
						},
						{
							name: 'features',
							type: 'directory',
							children: [
								{
									name: 'FeatureCard.tsx',
									type: 'file',
									content:
										'\'use client\'\n\nimport { ArrowRight } from \'lucide-react\'\nimport { useRef, useState } from \'react\'\nimport { Card } from \'../../../@/components/ui/card\'\n\ntype FeatureCardProps = {\n\tfeature: {\n\t\ticon: React.ReactNode\n\t\ttitle: string\n\t\tdescription: string\n\t}\n\tindex: number\n}\n\nexport default function FeatureCard({ feature, index }: FeatureCardProps) {\n\tconst [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })\n\tconst cardRef = useRef<HTMLDivElement>(null)\n\n\tconst handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n\t\tif (cardRef.current) {\n\t\t\tconst rect = cardRef.current.getBoundingClientRect()\n\t\t\tsetMousePosition({\n\t\t\t\tx: e.clientX - rect.left,\n\t\t\t\ty: e.clientY - rect.top\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card\n\t\t\tref={cardRef}\n\t\t\tonMouseMove={handleMouseMove}\n\t\t\tclassName="stagger-scale relative group rounded-lg border border-white/10 bg-black/20 p-6 hover:bg-white/5 transition-colors overflow-hidden"\n\t\t>\n\t\t\t<div className="relative z-10">\n\t\t\t\t<div className="flex items-center gap-3 mb-3">\n\t\t\t\t\t<div className="p-2 rounded-lg bg-violet-500/10 text-violet-400">\n\t\t\t\t\t\t{feature.icon}\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3 className="text-lg font-semibold text-white">\n\t\t\t\t\t\t{feature.title}\n\t\t\t\t\t</h3>\n\t\t\t\t</div>\n\t\t\t\t<p className="text-sm text-zinc-400">{feature.description}</p>\n\t\t\t\t<div className="mt-4 flex items-center text-sm text-violet-400 font-medium">\n\t\t\t\t\tLearn more\n\t\t\t\t\t<ArrowRight className="w-4 h-4 ml-1 transition-transform group-hover:translate-x-1" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName="absolute inset-0 z-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: `radial-gradient(circle at ${mousePosition.x}px ${mousePosition.y}px, rgba(124, 58, 237, 0.2) 0%, transparent 70%)`\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Card>\n\t)\n}\n',
									language: 'typescript'
								},
								{
									name: 'ide',
									type: 'directory',
									children: [
										{
											name: 'IDEContainer.tsx',
											type: 'file',
											content:
												"'use client'\n\nimport { cn } from '@/lib/utils'\nimport { Expand, Minimize2 } from 'lucide-react'\nimport { useState } from 'react'\n\ntype IDEContainerProps = {\n\tchildren: React.ReactNode\n\tclassName?: string\n}\n\nexport default function IDEContainer({\n\tchildren,\n\tclassName\n}: IDEContainerProps) {\n\tconst [isExpanded, setIsExpanded] = useState(false)\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cn(\n\t\t\t\t'relative transition-all duration-300',\n\t\t\t\tisExpanded\n\t\t\t\t\t? 'w-screen ml-[calc(-50vw+50%)] mr-[calc(-50vw+50%)]'\n\t\t\t\t\t: 'w-full',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t<button\n\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n\t\t\t\tclassName=\"absolute top-2 right-2 z-10 p-1.5 rounded-md bg-black/50 text-zinc-400 hover:text-white transition-colors border border-white/10\"\n\t\t\t>\n\t\t\t\t{isExpanded ? (\n\t\t\t\t\t<Minimize2 className=\"w-4 h-4\" />\n\t\t\t\t) : (\n\t\t\t\t\t<Expand className=\"w-4 h-4\" />\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n",
											language: 'typescript'
										},
										{
											name: 'file-viewer.tsx',
											type: 'file',
											content:
												"'use client'\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { X } from 'lucide-react'\nimport { PrismAsyncLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { ScrollArea } from '../../../../@/components/ui/scroll-area'\nimport { cn } from '../../../lib/utils'\nimport { customTheme } from '../../code-block/custom-theme'\nimport { customLightTheme } from '../../code-block/light-theme'\n\ntype FileViewerProps = {\n\tcontent?: string\n\tlanguage?: string\n\ttheme?: 'light' | 'dark' | 'system'\n\topenedFiles: string[]\n\tselectedPath: string | null\n\tonCloseFile: (path: string) => void\n\tonSelectFile: (path: string) => void\n\tfontSize?: number\n\tactiveTabColor?: 'blue' | 'purple' | 'pink' | 'green' | 'orange'\n\tlineNumbers?: boolean\n\twordWrap?: boolean\n}\n\nconst TAB_COLORS = {\n\tblue: 'before:bg-blue-400',\n\tpurple: 'before:bg-purple-400',\n\tpink: 'before:bg-pink-400',\n\tgreen: 'before:bg-green-400',\n\torange: 'before:bg-orange-400'\n} as const\n\nexport default function FileViewer({\n\tcontent,\n\tlanguage = 'typescript',\n\ttheme = 'system',\n\topenedFiles,\n\tselectedPath,\n\tonCloseFile,\n\tonSelectFile,\n\tfontSize = 13,\n\tactiveTabColor = 'blue',\n\tlineNumbers = true,\n\twordWrap = false\n}: FileViewerProps) {\n\tif (!content) return null\n\n\tconst getFileName = (path: string) => path.split('/').pop() || path\n\n\treturn (\n\t\t<div className=\"flex flex-col h-full\">\n\t\t\t{/* Header with tabs and window controls */}\n\t\t\t<div\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'flex items-center justify-between border-b px-4',\n\t\t\t\t\ttheme === 'dark' ? 'border-[#333333]' : 'border-zinc-200'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<div className=\"flex-1 flex\">\n\t\t\t\t\t<AnimatePresence initial={false}>\n\t\t\t\t\t\t{openedFiles.map((file) => (\n\t\t\t\t\t\t\t<motion.button\n\t\t\t\t\t\t\t\tkey={file}\n\t\t\t\t\t\t\t\tinitial={{ opacity: 0, x: -8 }}\n\t\t\t\t\t\t\t\tanimate={{ opacity: 1, x: 0 }}\n\t\t\t\t\t\t\t\texit={{ opacity: 0, x: -8 }}\n\t\t\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\t\t\tduration: 0.2,\n\t\t\t\t\t\t\t\t\tease: [0.16, 1, 0.3, 1]\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={() => onSelectFile(file)}\n\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t'group relative h-9 flex items-center gap-2 px-4 text-sm font-medium transition-colors',\n\t\t\t\t\t\t\t\t\tselectedPath === file\n\t\t\t\t\t\t\t\t\t\t? `text-zinc-100 before:absolute before:bottom-0 before:left-0 before:h-[2px] before:w-full ${TAB_COLORS[activeTabColor]}`\n\t\t\t\t\t\t\t\t\t\t: 'text-zinc-400 hover:text-zinc-300'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{getFileName(file)}\n\t\t\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\t\t\tinitial={{ opacity: 0, scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tanimate={{ opacity: 1, scale: 1 }}\n\t\t\t\t\t\t\t\t\texit={{ opacity: 0, scale: 0.8 }}\n\t\t\t\t\t\t\t\t\ttransition={{ duration: 0.15 }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<X\n\t\t\t\t\t\t\t\t\t\tsize={14}\n\t\t\t\t\t\t\t\t\t\tclassName=\"opacity-0 group-hover:opacity-100 hover:text-red-400\"\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\t\t\t\tonCloseFile(file)\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t\t</motion.button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</AnimatePresence>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t<div className=\"h-3 w-3 rounded-full bg-[#333333]\" />\n\t\t\t\t\t<div className=\"h-3 w-3 rounded-full bg-[#333333]\" />\n\t\t\t\t\t<div className=\"h-3 w-3 rounded-full bg-[#333333]\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Code viewer without animations */}\n\t\t\t<div className=\"flex-1 relative\">\n\t\t\t\t<ScrollArea className=\"h-full\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"relative font-mono pb-40\"\n\t\t\t\t\t\tstyle={{ fontSize: `${fontSize}px` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SyntaxHighlighter\n\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\ttheme === 'dark'\n\t\t\t\t\t\t\t\t\t? customTheme\n\t\t\t\t\t\t\t\t\t: customLightTheme\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tshowLineNumbers={lineNumbers}\n\t\t\t\t\t\t\tlineNumberStyle={{\n\t\t\t\t\t\t\t\tminWidth: '1.5rem',\n\t\t\t\t\t\t\t\tpaddingRight: '0.25rem',\n\t\t\t\t\t\t\t\ttextAlign: 'right',\n\t\t\t\t\t\t\t\tcolor: '#666',\n\t\t\t\t\t\t\t\tmarginRight: '0.25rem',\n\t\t\t\t\t\t\t\tuserSelect: 'none'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcustomStyle={{\n\t\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\t\tpadding: '1rem 0',\n\t\t\t\t\t\t\t\tbackground: 'transparent',\n\t\t\t\t\t\t\t\tfontSize: `${fontSize}px`,\n\t\t\t\t\t\t\t\tlineHeight: '1.5',\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\toverflowX: 'auto'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcodeTagProps={{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tfontSize: `${fontSize}px`,\n\t\t\t\t\t\t\t\t\tlineHeight: '1.5',\n\t\t\t\t\t\t\t\t\tfontFamily: 'var(--font-geist-mono)',\n\t\t\t\t\t\t\t\t\twhiteSpace: wordWrap ? 'pre-wrap' : 'pre'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\twrapLongLines={wordWrap}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t</SyntaxHighlighter>\n\t\t\t\t\t</div>\n\t\t\t\t</ScrollArea>\n\t\t\t\t{/* Add the same fade effect */}\n\t\t\t\t<div className=\"absolute bottom-0 left-0 right-0 pointer-events-none\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t'h-[1px] w-full',\n\t\t\t\t\t\t\ttheme === 'dark'\n\t\t\t\t\t\t\t\t? 'bg-[#333333]/20'\n\t\t\t\t\t\t\t\t: 'bg-zinc-200/20'\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t'h-40',\n\t\t\t\t\t\t\ttheme === 'dark'\n\t\t\t\t\t\t\t\t? 'bg-gradient-to-t from-black via-black/80 to-transparent'\n\t\t\t\t\t\t\t\t: 'bg-gradient-to-t from-white via-white/80 to-transparent'\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackdropFilter: 'blur(4px)',\n\t\t\t\t\t\t\tWebkitMaskImage:\n\t\t\t\t\t\t\t\t'linear-gradient(to top, black, transparent)',\n\t\t\t\t\t\t\tmaskImage:\n\t\t\t\t\t\t\t\t'linear-gradient(to top, black, transparent)'\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n",
											language: 'typescript'
										},
										{
											name: 'ide-demo.tsx',
											type: 'file',
											content:
												"'use client'\n\nimport { projectStructure } from '../../../core/config/tree-object'\nimport IDE from './ide'\n\nexport default function IDEDemo() {\n\tconst handleFileSelect = (path: string) => {\n\t\tconsole.log('Selected file:', path)\n\t}\n\n\treturn (\n\t\t<div className=\"h-[500px]\">\n\t\t\t<IDE\n\t\t\t\troot={projectStructure}\n\t\t\t\tonSelect={handleFileSelect}\n\t\t\t\ttheme=\"dark\"\n\t\t\t\tdefaultOpen={true}\n\t\t\t\tmaxFilesOpen={3}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n",
											language: 'typescript'
										},
										{
											name: 'ide.tsx',
											type: 'file',
											content:
												"'use client'\n\nimport {\n\tAnimatePresence,\n\tmotion,\n\tReorder,\n\tuseMotionValue,\n\tuseSpring\n} from 'framer-motion'\nimport { File, Folder, GripVertical } from 'lucide-react'\nimport * as React from 'react'\nimport { Resizable } from 'react-resizable'\nimport 'react-resizable/css/styles.css'\nimport { create } from 'zustand'\nimport { Card } from '../../../../@/components/ui/card'\nimport { ScrollArea } from '../../../../@/components/ui/scroll-area'\nimport type { FileIconConfig } from '../../../core/config/file-icons'\nimport { useDebouncedCallback } from '../../../hooks/use-debounce'\nimport { cn } from '../../../lib/utils'\nimport FileViewer from './file-viewer'\nimport NoFileSelected from './no-file-selected-state'\nimport SettingsPanel from './settings'\n\ninterface FileExplorer {\n\tname: string\n\ttype: 'file' | 'directory'\n\tchildren?: FileExplorer[]\n\tcontent?: string\n\tlanguage?: string\n}\n\ninterface IDEProps {\n\troot: FileExplorer\n\tonSelect: (path: string) => void\n\ttheme?: 'light' | 'dark' | 'system'\n\tdefaultCollapsed?: boolean\n\tdefaultOpen?: boolean\n\tmaxFilesOpen?: number\n\tfolderColor?: string\n\ticonColor?: string\n\tdefaultSelectedPath?: string\n\tcolorfulIcons?: boolean\n\tdefaultSettings?: Partial<SettingsState>\n\trootName?: string\n\tshowIndentGuides?: boolean\n\tcustomIcons?: (fileName: string) => FileIconConfig\n}\n\ninterface FileStoreState {\n\texpandedPaths: Set<string>\n\tselectedPath: string | null\n\ttoggleExpanded: (path: string) => void\n\tsetSelectedPath: (path: string) => void\n\topenedFiles: string[]\n\tsetOpenedFiles: (files: string[]) => void\n}\n\ntype SetState = (\n\tpartial:\n\t\t| FileStoreState\n\t\t| Partial<FileStoreState>\n\t\t| ((state: FileStoreState) => FileStoreState | Partial<FileStoreState>),\n\treplace?: boolean | undefined\n) => void\n\nconst useFileStore = create<FileStoreState>((set: SetState) => ({\n\texpandedPaths: new Set<string>([]),\n\tselectedPath: null,\n\ttoggleExpanded: (path: string) =>\n\t\tset((state: FileStoreState) => {\n\t\t\tconst newExpanded = new Set(state.expandedPaths)\n\t\t\tif (newExpanded.has(path)) {\n\t\t\t\tnewExpanded.delete(path)\n\t\t\t} else {\n\t\t\t\tnewExpanded.add(path)\n\t\t\t}\n\t\t\treturn { expandedPaths: newExpanded }\n\t\t}),\n\tsetSelectedPath: (path: string) => set({ selectedPath: path }),\n\topenedFiles: [],\n\tsetOpenedFiles: (files: string[]) => set({ openedFiles: files })\n}))\n\ntype FileTreeProps = {\n\titem: FileExplorer\n\tpath?: string\n\tdepth?: number\n\tdefaultCollapsed: boolean\n\thandleFileSelect: (path: string) => void\n\tdefaultOpen?: boolean\n\tmaxFilesOpen?: number\n\tfolderColor?: string\n\ticonColor?: string\n\tcolorfulIcons?: boolean\n\trootName?: string\n\tshowIndentGuides?: boolean\n}\n\ntype BinaryFileTypes =\n\t| '.ico'\n\t| '.woff'\n\t| '.woff2'\n\t| '.ttf'\n\t| '.eot'\n\t| '.png'\n\t| '.jpg'\n\t| '.jpeg'\n\t| '.gif'\n\t| '.webp'\n\nconst isBinaryFile = (fileName: string): boolean => {\n\tconst extension = fileName\n\t\t.slice(fileName.lastIndexOf('.'))\n\t\t.toLowerCase() as BinaryFileTypes\n\tconst binaryExtensions: BinaryFileTypes[] = [\n\t\t'.ico',\n\t\t'.woff',\n\t\t'.woff2',\n\t\t'.ttf',\n\t\t'.eot',\n\t\t'.png',\n\t\t'.jpg',\n\t\t'.jpeg',\n\t\t'.gif',\n\t\t'.webp'\n\t]\n\treturn binaryExtensions.includes(extension)\n}\n\nconst FILE_ICON_COLORS = {\n\t'tsconfig.json': 'text-blue-400',\n\t'package.json': 'text-red-400',\n\t'.env': 'text-green-400',\n\t'.tsx': 'text-blue-400',\n\t'.ts': 'text-blue-400',\n\t'.js': 'text-yellow-400',\n\t'.jsx': 'text-yellow-400',\n\t'.css': 'text-sky-400',\n\t'.scss': 'text-pink-400',\n\t'.md': 'text-white',\n\t'.json': 'text-yellow-400'\n} as const\n\nconst FOLDER_COLORS = {\n\tsrc: 'text-blue-400',\n\tcomponents: 'text-purple-400',\n\tpages: 'text-orange-400',\n\tstyles: 'text-pink-400',\n\tpublic: 'text-green-400',\n\tassets: 'text-yellow-400'\n} as const\n\nconst FileTree: React.FC<FileTreeProps> = ({\n\titem,\n\tpath = '',\n\tdepth = 0,\n\tdefaultCollapsed,\n\thandleFileSelect,\n\tdefaultOpen,\n\tmaxFilesOpen,\n\tfolderColor,\n\ticonColor,\n\tcolorfulIcons = false,\n\trootName = 'project-root',\n\tshowIndentGuides = true\n}: FileTreeProps) => {\n\tconst {\n\t\texpandedPaths,\n\t\tselectedPath,\n\t\ttoggleExpanded,\n\t\tsetSelectedPath,\n\t\topenedFiles,\n\t\tsetOpenedFiles\n\t} = useFileStore()\n\tconst fullPath = `${path}/${item.name}`\n\tconst isExpanded =\n\t\texpandedPaths.has(fullPath) ||\n\t\t(defaultOpen && item.type === 'directory')\n\tconst isSelected = selectedPath === fullPath\n\n\tconst isBinary = item.type === 'file' && isBinaryFile(item.name)\n\n\tconst handleFileOpen = (filePath: string) => {\n\t\tif (!openedFiles.includes(filePath)) {\n\t\t\tif (openedFiles.length >= maxFilesOpen) {\n\t\t\t\tconst fileToClose = openedFiles[0]\n\t\t\t\tsetOpenedFiles(\n\t\t\t\t\topenedFiles.filter((file) => file !== fileToClose)\n\t\t\t\t)\n\t\t\t}\n\t\t\tsetOpenedFiles([...openedFiles, filePath])\n\t\t}\n\t\tsetSelectedPath(filePath)\n\t\thandleFileSelect(filePath)\n\t}\n\n\tReact.useEffect(() => {\n\t\tif (item.type === 'directory' && defaultCollapsed) {\n\t\t\ttoggleExpanded(fullPath)\n\t\t}\n\t}, [fullPath, item.type, toggleExpanded, defaultCollapsed])\n\n\tconst getFileIconColor = (fileName: string) => {\n\t\tif (iconColor) return iconColor\n\t\tif (!colorfulIcons) return 'text-zinc-400'\n\t\tconst extension = Object.keys(FILE_ICON_COLORS).find((ext) =>\n\t\t\tfileName.endsWith(ext)\n\t\t)\n\t\treturn extension ? FILE_ICON_COLORS[extension] : 'text-zinc-400'\n\t}\n\n\tconst getFolderColor = (folderName: string) => {\n\t\tif (folderColor) return folderColor\n\t\tif (!colorfulIcons) return 'text-zinc-400'\n\t\treturn FOLDER_COLORS[folderName] || 'text-zinc-400'\n\t}\n\n\treturn (\n\t\t<Reorder.Item value={item} id={fullPath} className=\"w-full\">\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'flex items-center gap-2 py-1.5 px-2 text-sm group relative w-full',\n\t\t\t\t\tisSelected ? 'bg-[#1e1e1e] text-zinc-100' : 'text-zinc-400',\n\t\t\t\t\t!isBinary && 'cursor-pointer hover:text-zinc-300',\n\t\t\t\t\tisBinary && 'cursor-not-allowed opacity-60',\n\t\t\t\t\t'after:absolute after:bottom-0 after:left-2 after:right-2 after:h-[1px]',\n\t\t\t\t\t'after:bg-gradient-to-r after:from-transparent after:via-zinc-800 after:to-transparent',\n\t\t\t\t\t'after:opacity-0 hover:after:opacity-100',\n\t\t\t\t\t'transition-all duration-200'\n\t\t\t\t)}\n\t\t\t\tstyle={{ paddingLeft: `${depth * 12 + 8}px` }}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (item.type === 'directory') {\n\t\t\t\t\t\ttoggleExpanded(fullPath)\n\t\t\t\t\t} else if (!isBinary) {\n\t\t\t\t\t\thandleFileOpen(fullPath)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\ttransition={{ duration: 0.2 }}\n\t\t\t>\n\t\t\t\t{showIndentGuides && depth > 0 && (\n\t\t\t\t\t<div className=\"absolute left-0 top-0 bottom-0\">\n\t\t\t\t\t\t{[...Array(depth)].map((_, index) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName=\"absolute bottom-0 top-0 border-l border-zinc-800\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tleft: `${(index + 1) * 12}px`\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className=\"flex items-center gap-2 flex-1\">\n\t\t\t\t\t{(depth > 0 || item.type === 'file') &&\n\t\t\t\t\t\t(item.type === 'directory' ? (\n\t\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\t\tinitial={false}\n\t\t\t\t\t\t\t\tanimate={{ rotate: isExpanded ? 90 : 0 }}\n\t\t\t\t\t\t\t\ttransition={{ duration: 0.2 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Folder\n\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t'h-4 w-4',\n\t\t\t\t\t\t\t\t\t\tgetFolderColor(item.name)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<File\n\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t'h-4 w-4',\n\t\t\t\t\t\t\t\t\tisBinary\n\t\t\t\t\t\t\t\t\t\t? 'text-zinc-600'\n\t\t\t\t\t\t\t\t\t\t: getFileIconColor(item.name)\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t'truncate text-sm flex-1',\n\t\t\t\t\t\t\tisBinary && 'text-zinc-600',\n\t\t\t\t\t\t\tdepth === 0 && 'font-medium'\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{depth === 0 ? rootName : item.name}\n\t\t\t\t\t\t{isBinary && (\n\t\t\t\t\t\t\t<span className=\"ml-2 text-xs text-zinc-600 italic\">\n\t\t\t\t\t\t\t\t(Binary file)\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</motion.div>\n\t\t\t<AnimatePresence initial={false}>\n\t\t\t\t{isExpanded && item.children && (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tinitial={{ height: 0, opacity: 0 }}\n\t\t\t\t\t\tanimate={{ height: 'auto', opacity: 1 }}\n\t\t\t\t\t\texit={{ height: 0, opacity: 0 }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\tduration: 0.2,\n\t\t\t\t\t\t\tease: [0.04, 0.62, 0.23, 0.98]\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Reorder.Group\n\t\t\t\t\t\t\taxis=\"y\"\n\t\t\t\t\t\t\tvalues={item.children}\n\t\t\t\t\t\t\tonReorder={() => { }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.children.map((child: FileExplorer) => (\n\t\t\t\t\t\t\t\t<FileTree\n\t\t\t\t\t\t\t\t\tkey={child.name}\n\t\t\t\t\t\t\t\t\titem={child}\n\t\t\t\t\t\t\t\t\tpath={fullPath}\n\t\t\t\t\t\t\t\t\tdepth={depth + 1}\n\t\t\t\t\t\t\t\t\tdefaultCollapsed={defaultCollapsed}\n\t\t\t\t\t\t\t\t\thandleFileSelect={handleFileSelect}\n\t\t\t\t\t\t\t\t\tdefaultOpen={defaultOpen}\n\t\t\t\t\t\t\t\t\tmaxFilesOpen={maxFilesOpen}\n\t\t\t\t\t\t\t\t\tfolderColor={folderColor}\n\t\t\t\t\t\t\t\t\ticonColor={iconColor}\n\t\t\t\t\t\t\t\t\tcolorfulIcons={colorfulIcons}\n\t\t\t\t\t\t\t\t\trootName={rootName}\n\t\t\t\t\t\t\t\t\tshowIndentGuides={showIndentGuides}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Reorder.Group>\n\t\t\t\t\t</motion.div>\n\t\t\t\t)}\n\t\t\t</AnimatePresence>\n\t\t</Reorder.Item>\n\t)\n}\n\n// Add SettingsState type (can be imported from settings.tsx)\ntype SettingsState = {\n\ttheme: 'light' | 'dark' | 'system'\n\tcolorfulIcons: boolean\n\tfontSize: number\n\tactiveTabColor: 'blue' | 'purple' | 'pink' | 'green' | 'orange'\n\tlineNumbers: boolean\n\twordWrap: boolean\n\tshowIndentGuides: boolean\n}\n\nexport default function IDE({\n\troot,\n\tonSelect,\n\ttheme = 'dark',\n\tdefaultCollapsed = false,\n\tdefaultOpen = true,\n\tmaxFilesOpen = 5,\n\tfolderColor,\n\ticonColor,\n\tdefaultSelectedPath,\n\tcolorfulIcons = false,\n\tdefaultSettings = {},\n\trootName = 'project-root',\n\tshowIndentGuides = true,\n\tcustomIcons\n}: IDEProps) {\n\t// Initialize settings with defaults\n\tconst [settings, setSettings] = React.useState<SettingsState>({\n\t\ttheme: theme,\n\t\tcolorfulIcons: colorfulIcons,\n\t\tfontSize: 13,\n\t\tactiveTabColor: 'blue',\n\t\tlineNumbers: true,\n\t\twordWrap: false,\n\t\tshowIndentGuides: true,\n\t\t...defaultSettings\n\t})\n\n\tconst { selectedPath, openedFiles, setSelectedPath, setOpenedFiles } =\n\t\tuseFileStore()\n\n\tReact.useEffect(() => {\n\t\tif (defaultSelectedPath) {\n\t\t\tsetSelectedPath(defaultSelectedPath)\n\t\t}\n\t}, [defaultSelectedPath, setSelectedPath])\n\n\tconst handleSettingsChange = (newSettings: {\n\t\ttheme?: 'light' | 'dark' | 'system'\n\t}) => {\n\t\tif (newSettings.theme) {\n\t\t\tsetSettings((prev) => ({ ...prev, theme: newSettings.theme }))\n\t\t}\n\t}\n\n\tconst handleCloseFile = (path: string) => {\n\t\tsetOpenedFiles(openedFiles.filter((f) => f !== path))\n\t\tif (selectedPath === path) {\n\t\t\tsetSelectedPath(openedFiles[openedFiles.length - 2] || null)\n\t\t}\n\t}\n\n\t// Function to find file content\n\tconst findFileContent = (\n\t\tnode: FileExplorer,\n\t\ttargetPath: string\n\t): { content?: string; language?: string } | null => {\n\t\tconst nodePath = `/${node.name}`\n\t\tif (nodePath === targetPath)\n\t\t\treturn { content: node.content, language: node.language }\n\n\t\tif (node.children) {\n\t\t\tfor (const child of node.children) {\n\t\t\t\tconst result = findFileContent(\n\t\t\t\t\tchild,\n\t\t\t\t\ttargetPath.replace(nodePath, '')\n\t\t\t\t)\n\t\t\t\tif (result) return result\n\t\t\t}\n\t\t}\n\t\treturn null\n\t}\n\n\t// Get content of selected file\n\tconst selectedFile = selectedPath\n\t\t? findFileContent(root, selectedPath)\n\t\t: null\n\n\tconst [sidebarWidth, setSidebarWidth] = React.useState(240)\n\tconst [isDragging, setIsDragging] = React.useState(false)\n\tconst [tempWidth, setTempWidth] = React.useState(240)\n\n\t// Debounced handler for actual width updates\n\tconst debouncedSetWidth = useDebouncedCallback(\n\t\t(width: number) => {\n\t\t\tsetSidebarWidth(width)\n\t\t},\n\t\t50 // 50ms delay\n\t)\n\n\tconst handleResize = (\n\t\t_: React.SyntheticEvent,\n\t\t{ size }: { size: { width: number; height: number } }\n\t) => {\n\t\tsetTempWidth(size.width) // Update immediately for visual feedback\n\t\tdebouncedSetWidth(size.width) // Debounced actual update\n\t}\n\n\t// Add mouse follow gradient effect\n\tconst mouseX = useMotionValue(0)\n\tconst mouseY = useMotionValue(0)\n\n\tconst springX = useSpring(mouseX, { damping: 30, stiffness: 200 })\n\tconst springY = useSpring(mouseY, { damping: 30, stiffness: 200 })\n\n\tconst handleMouseMove = (e: React.MouseEvent) => {\n\t\tconst rect = e.currentTarget.getBoundingClientRect()\n\t\tmouseX.set(e.clientX - rect.left)\n\t\tmouseY.set(e.clientY - rect.top)\n\t}\n\n\treturn (\n\t\t<Card\n\t\t\tclassName={cn(\n\t\t\t\t'w-full relative overflow-hidden backdrop-blur-sm rounded-xl',\n\t\t\t\tsettings.theme === 'dark'\n\t\t\t\t\t? 'bg-[#000000] border-[#333333]'\n\t\t\t\t\t: 'bg-white border-zinc-200',\n\t\t\t\tsettings.theme === 'dark' ? 'dark' : 'light'\n\t\t\t)}\n\t\t\tonMouseMove={handleMouseMove}\n\t\t>\n\t\t\t{/* Gradient overlay */}\n\t\t\t<motion.div\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'absolute inset-0 pointer-events-none opacity-[0.03]',\n\t\t\t\t\tsettings.theme === 'dark' ? 'bg-blue-500' : 'bg-violet-500'\n\t\t\t\t)}\n\t\t\t\tstyle={\n\t\t\t\t\t{\n\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\tsettings.theme === 'dark'\n\t\t\t\t\t\t\t\t? 'radial-gradient(800px circle at var(--mouse-x) var(--mouse-y), rgba(29, 78, 216, 0.06), transparent 80%)'\n\t\t\t\t\t\t\t\t: 'radial-gradient(800px circle at var(--mouse-x) var(--mouse-y), rgba(124, 58, 237, 0.06), transparent 80%)',\n\t\t\t\t\t\t'--mouse-x': springX,\n\t\t\t\t\t\t'--mouse-y': springY,\n\t\t\t\t\t\tzIndex: 0\n\t\t\t\t\t} as any\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t{/* Content overlay */}\n\t\t\t<div\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'absolute inset-0 pointer-events-none',\n\t\t\t\t\tsettings.theme === 'dark' ? 'bg-black/40' : 'bg-white/40'\n\t\t\t\t)}\n\t\t\t\tstyle={{ zIndex: 1 }}\n\t\t\t/>\n\n\t\t\t{/* Main content */}\n\t\t\t<div className=\"flex h-[600px] relative\" style={{ zIndex: 2 }}>\n\t\t\t\t<Resizable\n\t\t\t\t\twidth={sidebarWidth}\n\t\t\t\t\theight={600}\n\t\t\t\t\tonResize={handleResize}\n\t\t\t\t\tonResizeStart={() => setIsDragging(true)}\n\t\t\t\t\tonResizeStop={() => setIsDragging(false)}\n\t\t\t\t\tminConstraints={[200, 600]}\n\t\t\t\t\tmaxConstraints={[400, 600]}\n\t\t\t\t\thandle={\n\t\t\t\t\t\t<div className=\"absolute right-0 top-0 bottom-0 w-[2px] cursor-col-resize group z-50\">\n\t\t\t\t\t\t\t<div className=\"absolute right-0 top-0 bottom-0 w-[1px] bg-[#333333]/50 group-hover:bg-blue-500/50 transition-colors\" />\n\t\t\t\t\t\t\t<div className=\"absolute top-1/2 -translate-y-1/2 right-[-4px] opacity-0 group-hover:opacity-100 transition-all duration-200\">\n\t\t\t\t\t\t\t\t<div className=\"bg-[#1e1e1e] border border-[#333333] rounded-md p-1 shadow-xl\">\n\t\t\t\t\t\t\t\t\t<GripVertical\n\t\t\t\t\t\t\t\t\t\tsize={12}\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-zinc-400 group-hover:text-blue-400 transition-colors\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"absolute inset-0 w-8 -left-3 opacity-0 group-hover:opacity-5 bg-blue-500 transition-opacity duration-200\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\taxis=\"x\"\n\t\t\t\t\tdraggableOpts={{\n\t\t\t\t\t\tenableUserSelectHack: false,\n\t\t\t\t\t\tgrid: [1, 1] // Smoother dragging\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: isDragging ? tempWidth : sidebarWidth,\n\t\t\t\t\t\t\ttransform: `translateX(0)`,\n\t\t\t\t\t\t\twillChange: 'transform'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t'relative border-r h-full transition-colors duration-200',\n\t\t\t\t\t\t\tsettings.theme === 'dark'\n\t\t\t\t\t\t\t\t? 'border-[#333333]/30 bg-[#000000]'\n\t\t\t\t\t\t\t\t: 'border-zinc-200/30 bg-white'\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"absolute top-2 right-2 z-10\">\n\t\t\t\t\t\t\t<SettingsPanel\n\t\t\t\t\t\t\t\tsettings={settings}\n\t\t\t\t\t\t\t\tonSettingsChange={(newSettings) =>\n\t\t\t\t\t\t\t\t\tsetSettings((prev) => ({\n\t\t\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\t\t\t...newSettings\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ScrollArea className=\"h-[600px]\">\n\t\t\t\t\t\t\t<div className=\"p-2 pb-40\">\n\t\t\t\t\t\t\t\t<Reorder.Group\n\t\t\t\t\t\t\t\t\taxis=\"y\"\n\t\t\t\t\t\t\t\t\tvalues={[root]}\n\t\t\t\t\t\t\t\t\tonReorder={() => { }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FileTree\n\t\t\t\t\t\t\t\t\t\titem={root}\n\t\t\t\t\t\t\t\t\t\tdefaultCollapsed={defaultCollapsed}\n\t\t\t\t\t\t\t\t\t\thandleFileSelect={onSelect}\n\t\t\t\t\t\t\t\t\t\tdefaultOpen={defaultOpen}\n\t\t\t\t\t\t\t\t\t\tmaxFilesOpen={maxFilesOpen}\n\t\t\t\t\t\t\t\t\t\tfolderColor={folderColor}\n\t\t\t\t\t\t\t\t\t\ticonColor={iconColor}\n\t\t\t\t\t\t\t\t\t\tcolorfulIcons={settings.colorfulIcons}\n\t\t\t\t\t\t\t\t\t\trootName={rootName}\n\t\t\t\t\t\t\t\t\t\tshowIndentGuides={\n\t\t\t\t\t\t\t\t\t\t\tsettings.showIndentGuides\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdepth={0}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Reorder.Group>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ScrollArea>\n\t\t\t\t\t\t<div className=\"absolute bottom-0 left-0 right-0 pointer-events-none\">\n\t\t\t\t\t\t\t<div className=\"h-[1px] w-full bg-[#333333]/20\" />\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"h-40 bg-gradient-to-t from-black via-black/80 to-transparent\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackdropFilter: 'blur(4px)',\n\t\t\t\t\t\t\t\t\tWebkitMaskImage:\n\t\t\t\t\t\t\t\t\t\t'linear-gradient(to top, black, transparent)',\n\t\t\t\t\t\t\t\t\tmaskImage:\n\t\t\t\t\t\t\t\t\t\t'linear-gradient(to top, black, transparent)'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Resizable>\n\t\t\t\t<div\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t'flex-1',\n\t\t\t\t\t\tsettings.theme === 'dark' ? 'bg-[#000000]' : 'bg-white'\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{selectedFile?.content ? (\n\t\t\t\t\t\t<FileViewer\n\t\t\t\t\t\t\tcontent={selectedFile.content}\n\t\t\t\t\t\t\tlanguage={selectedFile.language}\n\t\t\t\t\t\t\ttheme={settings.theme}\n\t\t\t\t\t\t\topenedFiles={openedFiles}\n\t\t\t\t\t\t\tselectedPath={selectedPath}\n\t\t\t\t\t\t\tonCloseFile={handleCloseFile}\n\t\t\t\t\t\t\tonSelectFile={setSelectedPath}\n\t\t\t\t\t\t\tfontSize={settings.fontSize}\n\t\t\t\t\t\t\tactiveTabColor={settings.activeTabColor}\n\t\t\t\t\t\t\tlineNumbers={settings.lineNumbers}\n\t\t\t\t\t\t\twordWrap={settings.wordWrap}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<NoFileSelected />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Card>\n\t)\n}\n",
											language: 'typescript'
										},
										{
											name: 'no-file-selected-state.tsx',
											type: 'file',
											content:
												'\'use client\'\n\nimport { motion } from \'framer-motion\'\nimport { Code2 } from \'lucide-react\'\n\nconst NoFileSelected = () => {\n\treturn (\n\t\t<motion.div\n\t\t\tclassName="flex flex-col items-center justify-center h-full text-zinc-500 space-y-4"\n\t\t\tinitial={{ opacity: 0, scale: 0.8 }}\n\t\t\tanimate={{ opacity: 1, scale: 1 }}\n\t\t\ttransition={{ duration: 0.5, ease: \'easeOut\' }}\n\t\t>\n\t\t\t<motion.div\n\t\t\t\tclassName="w-16 h-16 rounded-xl bg-zinc-900/50 flex items-center justify-center"\n\t\t\t\tinitial={{ rotate: 0 }}\n\t\t\t\tanimate={{ rotate: [0, 10, -10, 0] }}\n\t\t\t\ttransition={{\n\t\t\t\t\tduration: 1,\n\t\t\t\t\trepeat: Infinity,\n\t\t\t\t\trepeatType: \'loop\'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Code2 size={24} className="text-violet-400" />\n\t\t\t</motion.div>\n\t\t\t<div className="text-center space-y-1">\n\t\t\t\t<motion.p\n\t\t\t\t\tclassName="text-sm font-medium text-violet-400"\n\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\ttransition={{ delay: 0.5, duration: 0.5 }}\n\t\t\t\t>\n\t\t\t\t\tNo file selected\n\t\t\t\t</motion.p>\n\t\t\t\t<motion.p\n\t\t\t\t\tclassName="text-xs text-zinc-400"\n\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\ttransition={{ delay: 1, duration: 0.5 }}\n\t\t\t\t>\n\t\t\t\t\tSelect a file from the sidebar to view its contents\n\t\t\t\t</motion.p>\n\t\t\t</div>\n\t\t</motion.div>\n\t)\n}\n\nexport default NoFileSelected\n',
											language: 'typescript'
										},
										{
											name: 'settings.tsx',
											type: 'file',
											content:
												"'use client'\n\nimport * as PopoverPrimitive from '@radix-ui/react-popover'\nimport * as Tooltip from '@radix-ui/react-tooltip'\nimport { motion, useDragControls } from 'framer-motion'\nimport { Moon, Palette, Settings, Smartphone, Sun, Type, X } from 'lucide-react'\nimport { cn } from '../../../lib/utils'\n\ntype SettingsState = {\n\ttheme: 'light' | 'dark' | 'system'\n\tcolorfulIcons: boolean\n\tfontSize: number\n\tactiveTabColor: 'blue' | 'purple' | 'pink' | 'green' | 'orange'\n\tlineNumbers: boolean\n\twordWrap: boolean\n}\n\ntype SettingsPanelProps = {\n\tsettings: SettingsState\n\tonSettingsChange: (newSettings: Partial<SettingsState>) => void\n}\n\nconst TAB_COLORS = {\n\tblue: 'before:bg-blue-400',\n\tpurple: 'before:bg-purple-400',\n\tpink: 'before:bg-pink-400',\n\tgreen: 'before:bg-green-400',\n\torange: 'before:bg-orange-400'\n} as const\n\nconst CustomTooltip = ({ content, children }) => {\n\treturn (\n\t\t<Tooltip.Provider>\n\t\t\t<Tooltip.Root>\n\t\t\t\t<Tooltip.Trigger asChild>{children}</Tooltip.Trigger>\n\t\t\t\t<Tooltip.Portal>\n\t\t\t\t\t<Tooltip.Content\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t'bg-gray-800 text-white text-sm rounded-md p-2 shadow-lg',\n\t\t\t\t\t\t\t'transition-opacity duration-200 ease-in-out',\n\t\t\t\t\t\t\t\"data-state='visible':opacity-100\",\n\t\t\t\t\t\t\t\"data-state='hidden':opacity-0\"\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tside=\"top\"\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tsideOffset={5}\n\t\t\t\t\t>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t\t<Tooltip.Arrow className=\"fill-gray-800\" />\n\t\t\t\t\t</Tooltip.Content>\n\t\t\t\t</Tooltip.Portal>\n\t\t\t</Tooltip.Root>\n\t\t</Tooltip.Provider>\n\t)\n}\n\nexport default function SettingsPanel({\n\tsettings,\n\tonSettingsChange\n}: SettingsPanelProps) {\n\tconst dragControls = useDragControls()\n\n\tconst themeOptions = [\n\t\t{ value: 'light' as const, icon: Sun, label: 'Light' },\n\t\t{ value: 'dark' as const, icon: Moon, label: 'Dark' },\n\t\t{ value: 'system' as const, icon: Smartphone, label: 'System' }\n\t]\n\n\tconst fontSizes = [12, 13, 14, 15, 16]\n\tconst tabColors = Object.keys(TAB_COLORS) as Array<keyof typeof TAB_COLORS>\n\n\treturn (\n\t\t<PopoverPrimitive.Root>\n\t\t\t<PopoverPrimitive.Trigger asChild>\n\t\t\t\t<button className=\"p-2 rounded-full hover:bg-zinc-800/50 transition-colors\">\n\t\t\t\t\t<Settings\n\t\t\t\t\t\tsize={16}\n\t\t\t\t\t\tclassName=\"text-zinc-400 hover:text-zinc-300\"\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t</PopoverPrimitive.Trigger>\n\t\t\t<PopoverPrimitive.Portal>\n\t\t\t\t<PopoverPrimitive.Content asChild>\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tclassName=\"fixed z-50\"\n\t\t\t\t\t\tinitial={{ opacity: 0, scale: 0.95 }}\n\t\t\t\t\t\tanimate={{ opacity: 1, scale: 1 }}\n\t\t\t\t\t\texit={{ opacity: 0, scale: 0.95 }}\n\t\t\t\t\t\tdrag\n\t\t\t\t\t\tdragControls={dragControls}\n\t\t\t\t\t\tdragMomentum={false}\n\t\t\t\t\t\tdragElastic={0}\n\t\t\t\t\t>\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tclassName=\"w-80 rounded-lg border border-zinc-800 bg-zinc-900/95 p-4 cursor-move\"\n\t\t\t\t\t\t\tonPointerDown={(e) => dragControls.start(e)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"flex items-center justify-between mb-4\">\n\t\t\t\t\t\t\t\t<h3 className=\"text-sm font-medium text-zinc-200\">\n\t\t\t\t\t\t\t\t\tEditor Settings\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<CustomTooltip content=\"Tip! You can move/drag this panel if it is covering the results of your configuration\">\n\t\t\t\t\t\t\t\t\t<button className=\"rounded-full p-1 hover:bg-zinc-800/50 transition-colors\">\n\t\t\t\t\t\t\t\t\t\t<X\n\t\t\t\t\t\t\t\t\t\t\tsize={14}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-zinc-400\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</CustomTooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"space-y-6\">\n\t\t\t\t\t\t\t\t{/* Theme Selection */}\n\t\t\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t\t\t<label className=\"text-xs font-medium text-zinc-400 flex items-center gap-2\">\n\t\t\t\t\t\t\t\t\t\t<Sun className=\"w-3 h-3\" /> Theme\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"grid grid-cols-3 gap-2\">\n\t\t\t\t\t\t\t\t\t\t{themeOptions.map(\n\t\t\t\t\t\t\t\t\t\t\t({ value, icon: Icon, label }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSettingsChange({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttheme: value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'flex flex-col items-center gap-1 p-2 rounded-md border transition-all',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsettings.theme === value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'border-blue-500/50 bg-blue-500/10 text-blue-400'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'border-zinc-800 hover:border-zinc-700 text-zinc-400 hover:text-zinc-300'\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon size={14} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{/* Font Size */}\n\t\t\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t\t\t<label className=\"text-xs font-medium text-zinc-400 flex items-center gap-2\">\n\t\t\t\t\t\t\t\t\t\t<Type className=\"w-3 h-3\" /> Font Size\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"grid grid-cols-5 gap-2\">\n\t\t\t\t\t\t\t\t\t\t{fontSizes.map((size) => (\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tkey={size}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSettingsChange({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: size\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'p-2 rounded-md border text-xs transition-all',\n\t\t\t\t\t\t\t\t\t\t\t\t\tsettings.fontSize === size\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'border-blue-500/50 bg-blue-500/10 text-blue-400'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'border-zinc-800 hover:border-zinc-700 text-zinc-400 hover:text-zinc-300'\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{size}px\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{/* Tab Color */}\n\t\t\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t\t\t<label className=\"text-xs font-medium text-zinc-400 flex items-center gap-2\">\n\t\t\t\t\t\t\t\t\t\t<Palette className=\"w-3 h-3\" /> Active\n\t\t\t\t\t\t\t\t\t\tTab Color\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"grid grid-cols-5 gap-2\">\n\t\t\t\t\t\t\t\t\t\t{tabColors.map((color) => (\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tkey={color}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSettingsChange({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveTabColor: color\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'p-2 rounded-md border text-xs transition-all capitalize',\n\t\t\t\t\t\t\t\t\t\t\t\t\tsettings.activeTabColor ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `border-${color}-500/50 bg-${color}-500/10 text-${color}-400`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'border-zinc-800 hover:border-zinc-700 text-zinc-400 hover:text-zinc-300'\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{color}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{/* Toggle Options */}\n\t\t\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t\t\t<label className=\"text-xs font-medium text-zinc-400\">\n\t\t\t\t\t\t\t\t\t\tDisplay Options\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tonSettingsChange({\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorfulIcons:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!settings.colorfulIcons\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t'w-full flex items-center justify-between p-2 rounded-md border transition-all',\n\t\t\t\t\t\t\t\t\t\t\t\tsettings.colorfulIcons\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'border-blue-500/50 bg-blue-500/10 text-blue-400'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'border-zinc-800 hover:border-zinc-700 text-zinc-400 hover:text-zinc-300'\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\tColorful Icons\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tonSettingsChange({\n\t\t\t\t\t\t\t\t\t\t\t\t\tlineNumbers:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!settings.lineNumbers\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t'w-full flex items-center justify-between p-2 rounded-md border transition-all',\n\t\t\t\t\t\t\t\t\t\t\t\tsettings.lineNumbers\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'border-blue-500/50 bg-blue-500/10 text-blue-400'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'border-zinc-800 hover:border-zinc-700 text-zinc-400 hover:text-zinc-300'\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\tShow Line Numbers\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tonSettingsChange({\n\t\t\t\t\t\t\t\t\t\t\t\t\twordWrap: !settings.wordWrap\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t'w-full flex items-center justify-between p-2 rounded-md border transition-all',\n\t\t\t\t\t\t\t\t\t\t\t\tsettings.wordWrap\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'border-blue-500/50 bg-blue-500/10 text-blue-400'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'border-zinc-800 hover:border-zinc-700 text-zinc-400 hover:text-zinc-300'\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs\">\n\t\t\t\t\t\t\t\t\t\t\t\tWord Wrap\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t</motion.div>\n\t\t\t\t</PopoverPrimitive.Content>\n\t\t\t</PopoverPrimitive.Portal>\n\t\t</PopoverPrimitive.Root>\n\t)\n}\n",
											language: 'typescript'
										}
									]
								}
							]
						},
						{
							name: 'footer.tsx',
							type: 'file',
							content:
								'export default function Footer() {\n\treturn (\n\t\t<div className="absolute bottom-4 left-0 right-0 z-50">\n\t\t\t<div className="max-w-[90%] mx-auto">\n\t\t\t\t<a\n\t\t\t\t\thref="https://github.com/remcostoeten"\n\t\t\t\t\ttarget="_blank"\n\t\t\t\t\trel="noopener noreferrer"\n\t\t\t\t\tclassName="text-sm text-zinc-500 hover:text-zinc-300 transition-colors flex items-center justify-center gap-1.5"\n\t\t\t\t>\n\t\t\t\t\tMade with\n\t\t\t\t\t<span className="inline-block animate-pulse text-red-500">\n\t\t\t\t\t\t❤️\n\t\t\t\t\t</span>\n\t\t\t\t\tby Remco Stoeten\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n',
							language: 'typescript'
						},
						{
							name: 'header.tsx',
							type: 'file',
							content:
								'\'use client\'\n\nimport Logo from \'@/components/logo\'\nimport { Button } from \'@/components/ui/button\'\nimport { Github, Maximize2 } from \'lucide-react\'\n\ntype HeaderProps = {\n    onZenMode?: () => void\n}\n\nexport default function Header({ onZenMode }: HeaderProps) {\n    return (\n        <header className="sticky top-0 z-50 border-b border-white/10 bg-black/50 backdrop-blur-sm">\n            <nav className="max-w-screen-2xl mx-auto px-6 h-14 flex items-center justify-between">\n                <Logo size="sm" fill="#a1a1aa" />\n                <div className="flex items-center gap-4">\n                    <Button\n                        variant="ghost"\n                        size="sm"\n                        className="text-zinc-400 hover:text-white"\n                        asChild\n                    >\n                        <a href="https://github.com" className="flex items-center gap-2">\n                            <Github className="w-5 h-5" />\n                            <span className="hidden sm:inline">View Source</span>\n                        </a>\n                    </Button>\n                    <Button\n                        variant="outline"\n                        size="sm"\n                        onClick={onZenMode}\n                        className="text-zinc-400 hover:text-white border-zinc-700"\n                    >\n                        <Maximize2 className="w-4 h-4 mr-2" />\n                        Zen Mode\n                    </Button>\n                </div>\n            </nav>\n        </header>\n    )\n}\n',
							language: 'typescript'
						},
						{
							name: 'ide',
							type: 'directory',
							children: [
								{
									name: 'IDEContainer.tsx',
									type: 'file',
									content:
										"'use client'\n\nimport { cn } from '@/lib/utils'\nimport { Expand, Minimize2 } from 'lucide-react'\nimport { useState } from 'react'\n\ntype IDEContainerProps = {\n\tchildren: React.ReactNode\n\tclassName?: string\n}\n\nexport default function IDEContainer({\n\tchildren,\n\tclassName\n}: IDEContainerProps) {\n\tconst [isExpanded, setIsExpanded] = useState(false)\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cn(\n\t\t\t\t'relative transition-all duration-300',\n\t\t\t\tisExpanded\n\t\t\t\t\t? 'w-screen ml-[calc(-50vw+50%)] mr-[calc(-50vw+50%)]'\n\t\t\t\t\t: 'w-full',\n\t\t\t\tclassName\n\t\t\t)}\n\t\t>\n\t\t\t<button\n\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n\t\t\t\tclassName=\"absolute top-2 right-2 z-10 p-1.5 rounded-md bg-black/50 text-zinc-400 hover:text-white transition-colors border border-white/10\"\n\t\t\t>\n\t\t\t\t{isExpanded ? (\n\t\t\t\t\t<Minimize2 className=\"w-4 h-4\" />\n\t\t\t\t) : (\n\t\t\t\t\t<Expand className=\"w-4 h-4\" />\n\t\t\t\t)}\n\t\t\t</button>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n",
									language: 'typescript'
								}
							]
						},
						{
							name: 'isolated-ide-viewer.tsx',
							type: 'file',
							content:
								'import { Button } from \'@/components/ui/button\'\nimport { Dialog, DialogContent } from \'@/components/ui/dialog\'\nimport { motion } from \'framer-motion\'\nimport { X } from \'lucide-react\'\nimport IDE from \'./features/ide/ide\'\nimport Footer from \'./footer\'\nimport Logo from \'./logo\'\n\nconst IsolatedIDEModal = ({\n\tisOpen,\n\tonClose,\n\tprojectStructure\n}: {\n\tisOpen: boolean\n\tonClose: () => void\n\tprojectStructure: any\n}) => {\n\treturn (\n\t\t<Dialog open={isOpen} onOpenChange={onClose}>\n\t\t\t<DialogContent className="max-w-[95vw] h-[95vh] p-0 bg-black border border-white/10 overflow-hidden">\n\t\t\t\t<motion.div\n\t\t\t\t\tclassName="relative flex flex-col h-full"\n\t\t\t\t\tinitial={{ opacity: 0, scale: 0.95 }}\n\t\t\t\t\tanimate={{ opacity: 1, scale: 1 }}\n\t\t\t\t\texit={{ opacity: 0, scale: 0.95 }}\n\t\t\t\t\ttransition={{ duration: 0.2 }}\n\t\t\t\t>\n\t\t\t\t\t<div className="absolute top-4 left-4 z-50">\n\t\t\t\t\t\t<Logo size="sm" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant="ghost"\n\t\t\t\t\t\tsize="sm"\n\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\tclassName="absolute top-4 right-4 z-50 h-8 w-8 p-0 text-zinc-400 hover:text-white hover:bg-white/10"\n\t\t\t\t\t>\n\t\t\t\t\t\t<X className="h-4 w-4" />\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<div className="flex-1 min-h-0 p-12">\n\t\t\t\t\t\t<div className="w-full h-full rounded-xl overflow-hidden border border-white/10">\n\t\t\t\t\t\t\t<IDE\n\t\t\t\t\t\t\t\troot={projectStructure}\n\t\t\t\t\t\t\t\tonSelect={(path) =>\n\t\t\t\t\t\t\t\t\tconsole.log(\'Selected:\', path)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttheme="dark"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Footer />\n\t\t\t\t</motion.div>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t)\n}\n\nexport default IsolatedIDEModal\n',
							language: 'typescript'
						},
						{
							name: 'logo.tsx',
							type: 'file',
							content:
								"'use client'\n\nimport Link from 'next/link'\nimport { useRouter } from 'next/navigation'\nimport { useState } from 'react'\n\ninterface LogoProps {\n\tclassName?: string\n\tsize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n\twidth?: number\n\theight?: number\n\tfill?: string\n\tbgFill?: string\n\tanimated?: boolean\n\thasLink?: boolean\n\tlinkTo?: string\n}\n\nconst sizeMap = {\n\txs: { width: 32, height: 32 },\n\tsm: { width: 48, height: 48 },\n\tmd: { width: 64, height: 64 },\n\tlg: { width: 96, height: 96 },\n\txl: { width: 128, height: 128 }\n}\n\nexport default function Logo({\n\tclassName = '',\n\tsize = 'md',\n\twidth,\n\theight,\n\tfill = '#fff',\n\tbgFill = 'transparent',\n\tanimated = true,\n\thasLink = false,\n\tlinkTo = '/'\n}: LogoProps) {\n\tconst router = useRouter()\n\tconst [isFocusedOnInput, setIsFocusedOnInput] = useState(false)\n\n\tconst { width: defaultWidth, height: defaultHeight } = sizeMap[size]\n\tconst finalWidth = width || defaultWidth\n\tconst finalHeight = height || defaultHeight\n\n\tconst containerStyle = {\n\t\ttransform: 'scale(1)',\n\t\ttransition: 'transform 0.3s ease'\n\t}\n\n\tconst containerHoverStyle = {\n\t\ttransform: 'scale(1.02)'\n\t}\n\n\tconst pathStyle = animated\n\t\t? {\n\t\t\t\topacity: 1,\n\t\t\t\ttransform: 'scale(1)',\n\t\t\t\ttransition: 'transform 0.3s ease, opacity 0.3s ease'\n\t\t\t}\n\t\t: {}\n\n\tconst pathHoverStyle = animated\n\t\t? ({\n\t\t\t\ttransform: 'scale(1.1)'\n\t\t\t} as const)\n\t\t: {}\n\n\tconst LogoSVG = (\n\t\t<svg\n\t\t\tclassName={className}\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth={finalWidth}\n\t\t\theight={finalHeight}\n\t\t\tviewBox=\"0 0 400 585\"\n\t\t\trole=\"img\"\n\t\t\taria-label=\"Company Logo\"\n\t\t\tstyle={containerStyle}\n\t\t\tonMouseEnter={(e) => {\n\t\t\t\tif (e.currentTarget) {\n\t\t\t\t\te.currentTarget.style.transform =\n\t\t\t\t\t\tcontainerHoverStyle.transform\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonMouseLeave={(e) => {\n\t\t\t\tif (e.currentTarget) {\n\t\t\t\t\te.currentTarget.style.transform = 'scale(1)'\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<rect width=\"100%\" height=\"100%\" fill={bgFill} aria-hidden=\"true\" />\n\t\t\t<g>\n\t\t\t\t{[\n\t\t\t\t\t'M65.255 137.908C62.231 138.469 62.232 138.452 62.422 200.249C62.515 230.249 62.762 255.379 62.971 256.093C63.376 257.475 63.512 257.513 73.266 259.020C78.350 259.806 98.929 259.644 105.571 258.766C154.358 252.321 192.011 225.224 223.926 173.593C227.452 167.888 227.743 167.388 231.099 161.270C234.338 155.364 235.756 147.579 233.998 145.356C232.074 142.923 221.144 140.042 208.468 138.625C201.187 137.811 69.335 137.151 65.255 137.908',\n\t\t\t\t\t'M270.707 166.283C269.322 166.762 266.296 168.476 263.982 170.092C259.245 173.400 248.606 181.365 247.530 182.408C247.142 182.784 244.807 184.762 242.341 186.803C226.311 200.076 210.615 218.611 199.106 237.858C191.853 249.989 185.067 268.757 182.356 284.184C177.783 310.202 180.473 341.262 190.098 373.599C194.298 387.710 195.826 392.445 199.262 401.993C200.395 405.143 201.501 408.281 201.719 408.966C205.651 421.349 224.457 461.849 229.176 468.099C232.748 472.831 228.661 472.478 279.950 472.478C330.112 472.478 326.835 472.703 328.299 469.168C329.351 466.629 329.446 466.777 293.898 415.610C250.489 353.127 253.911 358.308 253.911 355.073C253.911 352.213 255.094 350.977 261.534 347.107C321.387 311.134 336.930 235.138 295.437 181.341C285.119 167.963 278.140 163.713 270.707 166.283',\n\t\t\t\t\t'M64.757 275.378C62.237 276.144 62.277 274.411 62.432 375.093C62.512 426.463 62.756 469.106 62.976 469.855C63.731 472.427 63.198 472.399 116.065 472.611C179.148 472.863 175.457 473.235 176.719 466.501C178.604 456.431 179.291 425.928 177.936 412.453C176.909 402.251 175.596 391.497 174.833 387.049C164.412 326.284 142.693 294.831 101.868 281.383C87.989 276.810 69.752 273.860 64.757 275.378'\n\t\t\t\t].map((d, index) => (\n\t\t\t\t\t<path\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\td={d}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...pathStyle,\n\t\t\t\t\t\t\ttransitionDelay: animated ? `${index * 0.2}s` : '0s'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseEnter={(e) => {\n\t\t\t\t\t\t\tif (animated && e.currentTarget) {\n\t\t\t\t\t\t\t\te.currentTarget.style.transform =\n\t\t\t\t\t\t\t\t\tpathHoverStyle.transform as string\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonMouseLeave={(e) => {\n\t\t\t\t\t\t\tif (animated && e.currentTarget) {\n\t\t\t\t\t\t\t\te.currentTarget.style.transform = 'scale(1)'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</g>\n\t\t</svg>\n\t)\n\n\treturn hasLink ? (\n\t\t<Link\n\t\t\thref={linkTo}\n\t\t\ttitle=\"Home (⌘/Ctrl + H or Shift + H)\"\n\t\t\tclassName=\"transition-colors hover:brightness-0 dark:invert dark:hover:invert-0 dark:hover:brightness-200\"\n\t\t>\n\t\t\t{LogoSVG}\n\t\t</Link>\n\t) : (\n\t\t<div className=\"transition-colors hover:brightness-0 dark:invert dark:hover:invert-0 dark:hover:brightness-200\">\n\t\t\t{LogoSVG}\n\t\t</div>\n\t)\n}\n",
							language: 'typescript'
						},
						{
							name: 'terminal-output.tsx',
							type: 'file',
							content:
								"import React from 'react'\nimport { motion } from 'framer-motion'\n\nconst TerminalOutput = () => {\n\tconst words = [\n\t\t{ text: '$~', className: 'text-zinc-400' },\n\t\t{ text: 'python3', className: 'text-emerald-400' },\n\t\t{\n\t\t\ttext: 'src/scripts/generate-tree-object.py',\n\t\t\tclassName: 'text-blue-400'\n\t\t},\n\t\t{ text: 'src/app/', className: 'text-yellow-400' }\n\t]\n\n\tconst outputWords = [\n\t\t{ text: 'Successfully', className: 'text-green-400' },\n\t\t{ text: 'generated', className: 'text-green-400' },\n\t\t{ text: 'IDE', className: 'text-green-400' },\n\t\t{ text: 'structure', className: 'text-green-400' },\n\t\t{ text: 'in', className: 'text-green-400' },\n\t\t{ text: 'src/core/config/tree-object.ts', className: 'text-blue-300' }\n\t]\n\n\tconst containerVariants = {\n\t\thidden: { opacity: 0 },\n\t\tvisible: {\n\t\t\topacity: 1,\n\t\t\ttransition: {\n\t\t\t\tstaggerChildren: 0.1\n\t\t\t}\n\t\t}\n\t}\n\n\tconst wordVariants = {\n\t\thidden: { opacity: 0, y: 20 },\n\t\tvisible: {\n\t\t\topacity: 1,\n\t\t\ty: 0,\n\t\t\ttransition: {\n\t\t\t\ttype: 'spring',\n\t\t\t\tdamping: 10,\n\t\t\t\tduration: 0.5,\n\t\t\t\tease: 'easeOut'\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName=\"w-full  mx-auto lg:mx-0 mb-6\"\n\t\t\tinitial=\"hidden\"\n\t\t\tanimate=\"visible\"\n\t\t\tvariants={containerVariants}\n\t\t>\n\t\t\t<code className=\"w-fulltext-sm rounded-xl p-4 bg-black/95 inline-block border border-white/20 font-mono shadow-md shadow-zinc-900/30 drop-shadow-md drop-shadow-zinc-900/50 bg-gradient-to-r from-transparent via-zinc-900/50 to-transparent\">\n\t\t\t\t<motion.div\n\t\t\t\t\tclassName=\"flex flex-wrap gap-x-2\"\n\t\t\t\t\tvariants={containerVariants}\n\t\t\t\t>\n\t\t\t\t\t{words.map((word, index) => (\n\t\t\t\t\t\t<motion.span\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName={word.className}\n\t\t\t\t\t\t\tvariants={wordVariants}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{word.text}\n\t\t\t\t\t\t</motion.span>\n\t\t\t\t\t))}\n\t\t\t\t</motion.div>\n\t\t\t\t<motion.div\n\t\t\t\t\tclassName=\"flex flex-wrap gap-x-2 mt-2\"\n\t\t\t\t\tvariants={containerVariants}\n\t\t\t\t>\n\t\t\t\t\t{outputWords.map((word, index) => (\n\t\t\t\t\t\t<motion.span\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName={word.className}\n\t\t\t\t\t\t\tvariants={wordVariants}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{word.text}\n\t\t\t\t\t\t</motion.span>\n\t\t\t\t\t))}\n\t\t\t\t</motion.div>\n\t\t\t</code>\n\t\t</motion.div>\n\t)\n}\n\nexport default TerminalOutput\n",
							language: 'typescript'
						},
						{
							name: 'ui',
							type: 'directory',
							children: [
								{
									name: 'button.tsx',
									type: 'file',
									content:
										"'use client'\n\nimport { cn } from '@/lib/utils'\nimport { type VariantProps, cva } from 'class-variance-authority'\nimport * as React from 'react'\n\nconst buttonVariants = cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault:\n\t\t\t\t\t'bg-primary text-primary-foreground shadow hover:bg-primary/90',\n\t\t\t\tdestructive:\n\t\t\t\t\t'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\n\t\t\t\toutline:\n\t\t\t\t\t'border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary:\n\t\t\t\t\t'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'text-primary underline-offset-4 hover:underline'\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-9 px-4 py-2',\n\t\t\t\tsm: 'h-8 rounded-md px-3 text-xs',\n\t\t\t\tlg: 'h-10 rounded-md px-8',\n\t\t\t\ticon: 'h-9 w-9'\n\t\t\t}\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default'\n\t\t}\n\t}\n)\n\nexport type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> &\n\tVariantProps<typeof buttonVariants> & {\n\t\tasChild?: boolean\n\t}\n\nexport function Button({\n\tclassName,\n\tvariant,\n\tsize,\n\tasChild = false,\n\t...props\n}: ButtonProps) {\n\treturn (\n\t\t<button\n\t\t\tclassName={cn(buttonVariants({ variant, size, className }))}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n",
									language: 'typescript'
								},
								{
									name: 'slider.tsx',
									type: 'file',
									content:
										"'use client'\n\nimport * as React from 'react'\nimport * as SliderPrimitive from '@radix-ui/react-slider'\n\nimport { cn } from '@/lib/utils'\n\nconst Slider = React.forwardRef<\n\tReact.ElementRef<typeof SliderPrimitive.Root>,\n\tReact.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n\t<SliderPrimitive.Root\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex w-full touch-none select-none items-center',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\n\t\t\t<SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n\t\t</SliderPrimitive.Track>\n\t\t<SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\n\t</SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n",
									language: 'typescript'
								},
								{
									name: 'tabs.tsx',
									type: 'file',
									content:
										"'use client'\n\nimport * as React from 'react'\nimport * as TabsPrimitive from '@radix-ui/react-tabs'\n\nimport { cn } from '@/lib/utils'\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n\tReact.ElementRef<typeof TabsPrimitive.List>,\n\tReact.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n\t<TabsPrimitive.List\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n\tReact.ElementRef<typeof TabsPrimitive.Trigger>,\n\tReact.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n\t<TabsPrimitive.Trigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n\tReact.ElementRef<typeof TabsPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n\t<TabsPrimitive.Content\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n",
									language: 'typescript'
								}
							]
						},
						{
							name: 'zenIDEmodal.tsx',
							type: 'file',
							content:
								'\'use client\'\n\nimport { Button } from \'@/components/ui/button\'\nimport { getFileIcon } from \'@/core/config/file-icons\'\nimport { projectStructure } from \'@/core/config/tree-object\'\nimport { AnimatePresence, motion } from \'framer-motion\'\nimport { Maximize2, X } from \'lucide-react\'\nimport { useState } from \'react\'\nimport IDE from \'./features/ide/ide\'\n\nexport default function ZenIDEModal() {\n\tconst [isZenMode, setIsZenMode] = useState(false)\n\n\tconst toggleZenMode = () => setIsZenMode(!isZenMode)\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tonClick={toggleZenMode}\n\t\t\t\tclassName="fixed bottom-4 right-4 z-50"\n\t\t\t>\n\t\t\t\t<Maximize2 className="w-4 h-4 mr-2" />\n\t\t\t\tZen Mode\n\t\t\t</Button>\n\n\t\t\t<AnimatePresence>\n\t\t\t\t{isZenMode && (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tinitial={{ opacity: 0, scale: 0.9 }}\n\t\t\t\t\t\tanimate={{ opacity: 1, scale: 1 }}\n\t\t\t\t\t\texit={{ opacity: 0, scale: 0.9 }}\n\t\t\t\t\t\tclassName="fixed inset-4 bg-black z-50 flex flex-col rounded-lg border border-white/10"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className="flex justify-between items-center p-4 border-b border-white/10">\n\t\t\t\t\t\t\t<h2 className="text-xl font-bold text-white">\n\t\t\t\t\t\t\t\tZen Mode\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant="ghost"\n\t\t\t\t\t\t\t\tsize="icon"\n\t\t\t\t\t\t\t\tonClick={toggleZenMode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<X className="w-6 h-6" />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className="flex-1 overflow-auto">\n\t\t\t\t\t\t\t<IDE\n\t\t\t\t\t\t\t\troot={projectStructure}\n\t\t\t\t\t\t\t\tonSelect={(path) =>\n\t\t\t\t\t\t\t\t\tconsole.log(\'Selected:\', path)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttheme="dark"\n\t\t\t\t\t\t\t\tcustomIcons={getFileIcon}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</motion.div>\n\t\t\t\t)}\n\t\t\t</AnimatePresence>\n\t\t</>\n\t)\n}\n',
							language: 'typescript'
						}
					]
				},
				{
					name: 'core',
					type: 'directory',
					children: [
						{
							name: 'config',
							type: 'directory',
							children: [
								{
									name: 'api-props.ts',
									type: 'file',
									content:
										"export const apiProps = [\n\t{\n\t\ttitle: 'Core Props',\n\t\tdescription: 'Essential properties for the IDE component',\n\t\tprops: [\n\t\t\t{\n\t\t\t\tname: 'root',\n\t\t\t\ttype: 'FileStructure',\n\t\t\t\tdescription:\n\t\t\t\t\t'The root file structure object that defines your file tree',\n\t\t\t\trequired: true,\n\t\t\t\tdefaultValue: '-',\n\t\t\t\tversion: '1.0.0'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'theme',\n\t\t\t\ttype: '\"dark\" | \"light\"',\n\t\t\t\tdescription: 'Controls the color scheme of the IDE',\n\t\t\t\tdefaultValue: '\"dark\"',\n\t\t\t\tversion: '1.0.0'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'onSelect',\n\t\t\t\ttype: '(path: string) => void',\n\t\t\t\tdescription:\n\t\t\t\t\t'Callback function triggered when a file is selected',\n\t\t\t\tdefaultValue: '-',\n\t\t\t\tversion: '1.0.0'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'defaultExpanded',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: 'Whether to expand all folders by default',\n\t\t\t\tdefaultValue: 'false',\n\t\t\t\tversion: '1.0.0'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\ttitle: 'Styling',\n\t\tdescription: 'Visual customization options',\n\t\tprops: [\n\t\t\t{\n\t\t\t\tname: 'className',\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription:\n\t\t\t\t\t'Additional CSS classes to apply to the root element',\n\t\t\t\tdefaultValue: '\"\"',\n\t\t\t\tversion: '1.0.0'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'iconSize',\n\t\t\t\ttype: 'number',\n\t\t\t\tdescription: 'Size of folder and file icons in pixels',\n\t\t\t\tdefaultValue: '16',\n\t\t\t\tversion: '1.0.0'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'indentSize',\n\t\t\t\ttype: 'number',\n\t\t\t\tdescription: 'Indentation size in pixels for nested items',\n\t\t\t\tdefaultValue: '24',\n\t\t\t\tversion: '1.0.0'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\ttitle: 'Behavior',\n\t\tdescription: 'Interactive behavior configuration',\n\t\tprops: [\n\t\t\t{\n\t\t\t\tname: 'enableFileIcons',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: 'Show file type icons next to file names',\n\t\t\t\tdefaultValue: 'true',\n\t\t\t\tversion: '1.0.0',\n\t\t\t\tbeta: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'enableFolderIcons',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: 'Show folder icons next to directory names',\n\t\t\t\tdefaultValue: 'true',\n\t\t\t\tversion: '1.0.0'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'enableSelection',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: 'Allow files to be selected',\n\t\t\t\tdefaultValue: 'true',\n\t\t\t\tversion: '1.0.0'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'enableCollapse',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: 'Allow folders to be collapsed/expanded',\n\t\t\t\tdefaultValue: 'true',\n\t\t\t\tversion: '1.0.0'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\ttitle: 'Advanced',\n\t\tdescription: 'Advanced configuration options',\n\t\tprops: [\n\t\t\t{\n\t\t\t\tname: 'customIcons',\n\t\t\t\ttype: 'Record<string, ReactNode>',\n\t\t\t\tdescription: 'Custom icons for specific file extensions',\n\t\t\t\tdefaultValue: '{}',\n\t\t\t\tversion: '1.0.0',\n\t\t\t\tbeta: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'fileFilter',\n\t\t\t\ttype: '(file: FileStructure) => boolean',\n\t\t\t\tdescription:\n\t\t\t\t\t'Function to filter which files should be displayed',\n\t\t\t\tdefaultValue: '-',\n\t\t\t\tversion: '1.0.0',\n\t\t\t\tbeta: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'sortFiles',\n\t\t\t\ttype: '(a: FileStructure, b: FileStructure) => number',\n\t\t\t\tdescription: 'Custom sorting function for files and folders',\n\t\t\t\tdefaultValue: '-',\n\t\t\t\tversion: '1.0.0',\n\t\t\t\tbeta: true\n\t\t\t}\n\t\t]\n\t}\n]\n",
									language: 'typescript'
								},
								{
									name: 'code-examples.ts',
									type: 'file',
									content:
										"export const USAGE_EXAMPLE = `import { IDE } from '@/components/ide'\n\n// Define your file structure\nconst projectStructure = {\n  name: 'project-root',\n  type: 'directory',\n  children: [\n    {\n      name: 'src',\n      type: 'directory',\n      children: [\n        {\n          name: 'components',\n          type: 'directory',\n          children: [\n            {\n              name: 'Button.tsx',\n              type: 'file',\n              content: '// Your component code...'\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n\n// Example usage with all available props\nexport default function IDEExample() {\n  return (\n    <IDE\n      // Required props\n      root={projectStructure}\n      onSelect={(path) => console.log('Selected:', path)}\n      \n      // Optional props with defaults\n      theme=\"dark\"                // 'light' | 'dark' | 'system'\n      defaultOpen={true}         // Auto-expand folders\n      maxFilesOpen={5}          // Maximum number of files open at once\n      folderColor=\"#4B5563\"     // Custom folder icon color\n      defaultSelectedPath=\"\"    // Path to initially selected file\n      colorfulIcons={true}     // Use colorful file icons\n      showIndentGuides={true}  // Show vertical indent guides\n      customIcons={getFileIcon} // Custom icon function\n      \n      // Additional settings\n      defaultSettings={{\n        fontSize: 13,\n        theme: 'dark',\n        activeTabColor: 'blue',\n        showMinimap: true,\n        wordWrap: true,\n        showLineNumbers: true,\n      }}\n    />\n  )\n}`\n\n// You might also want to add a type definition example\nexport const TYPE_DEFINITION = `type IDEProps = {\n  // Required props\n  root: FileStructure\n  onSelect: (path: string) => void\n  \n  // Optional props\n  theme?: 'light' | 'dark' | 'system'\n  defaultOpen?: boolean\n  maxFilesOpen?: number\n  folderColor?: string\n  defaultSelectedPath?: string\n  colorfulIcons?: boolean\n  showIndentGuides?: boolean\n  customIcons?: (fileName: string) => React.ReactNode\n  defaultSettings?: {\n    fontSize?: number\n    theme?: string\n    activeTabColor?: string\n    showMinimap?: boolean\n    wordWrap?: boolean\n    showLineNumbers?: boolean\n  }\n}`\n",
									language: 'typescript'
								},
								{
									name: 'file-icons.ts',
									type: 'file',
									content:
										"'use client'\n\nimport {\n\tFileIcon,\n\tFileText,\n\tFileType,\n\tFileType2,\n\tFolderGit2,\n\tImage,\n\tLucideIcon,\n\tPackage\n} from 'lucide-react'\n\nexport type FileIconConfig = {\n\ticon: LucideIcon\n\tcolor?: string\n}\n\n// Create a mapping of file extensions to their icons and colors\nexport const fileIcons: Record<string, FileIconConfig> = {\n\t// Config files\n\t'tsconfig.json': { icon: FileType2, color: 'text-blue-400' },\n\t'package.json': { icon: Package, color: 'text-red-400' },\n\t'next.config.js': { icon: FileType, color: 'text-white' },\n\t'.env': { icon: FileText, color: 'text-yellow-400' },\n\n\t// Source files\n\t'.tsx': { icon: FileType2, color: 'text-blue-400' },\n\t'.ts': { icon: FileType2, color: 'text-blue-400' },\n\t'.js': { icon: FileType, color: 'text-yellow-400' },\n\t'.jsx': { icon: FileType, color: 'text-yellow-400' },\n\n\t// Styles\n\t'.css': { icon: FileType, color: 'text-blue-400' },\n\t'.scss': { icon: FileType, color: 'text-pink-400' },\n\t'.module.css': { icon: FileType, color: 'text-blue-400' },\n\n\t// Assets\n\t'.svg': { icon: Image, color: 'text-green-400' },\n\t'.png': { icon: Image, color: 'text-green-400' },\n\t'.jpg': { icon: Image, color: 'text-green-400' },\n\n\t// Documentation\n\t'.md': { icon: FileText, color: 'text-blue-200' },\n\t'README.md': { icon: FileText, color: 'text-blue-200' },\n\n\t// Git\n\t'.git': { icon: FolderGit2, color: 'text-orange-400' },\n\n\t// Default\n\tdefault: { icon: FileIcon, color: 'text-zinc-400' }\n}\n\nexport function getFileIcon(fileName: string): FileIconConfig {\n\t// Check for exact file name match\n\tif (fileName in fileIcons) {\n\t\treturn fileIcons[fileName]\n\t}\n\n\t// Check for extension match\n\tconst extension = fileName.split('.').pop()\n\tif (extension && `.${extension}` in fileIcons) {\n\t\treturn fileIcons[`.${extension}`]\n\t}\n\n\t// Return default icon if no match found\n\treturn fileIcons.default\n}\n",
									language: 'typescript'
								},
								{
									name: 'tree-object.ts',
									type: 'file',
									content:
										'// File content too large to display',
									language: 'typescript'
								},
								{
									name: 'usage-example.ts',
									type: 'file',
									content:
										"export type FileExplorer = {\n\tname: string\n\ttype: 'file' | 'directory'\n\tchildren?: FileExplorer[]\n\tcontent?: string\n\tlanguage?: string\n}\n\nexport const usageExample: FileExplorer = {\n\tname: 'Usage Example',\n\ttype: 'directory',\n\tchildren: [\n\t\t{\n\t\t\tname: 'IDE Component Usage',\n\t\t\ttype: 'file',\n\t\t\tcontent: `import { projectStructure } from '../../core/config/tree-object';\nimport IDE from './ide';\n\nconst App = () => {\n  const handleFileSelect = (path: string) => {\n    console.log('Selected file:', path);\n  };\n\n  return (\n    <IDE\n      root={projectStructure}\n      onSelect={handleFileSelect}\n      theme=\"system\" // Theme can be 'light', 'dark', or 'system'\n      defaultOpen={true} // Whether directories should be open by default\n      maxFilesOpen={3} // Maximum number of files that can be opened\n      defaultSelectedPath=\"/src/components/FileTree.tsx\" // Default selected file\n    />\n  );\n};\n\nexport default App;`,\n\t\t\tlanguage: 'typescript'\n\t\t},\n\t\t{\n\t\t\tname: 'API Props',\n\t\t\ttype: 'file',\n\t\t\tcontent: `- root: The root file structure to display in the IDE (required).\n- onSelect: Callback function when a file is selected (required).\n- theme: The theme for the IDE ('light', 'dark', or 'system'). Default is 'system'.\n- defaultOpen: Whether directories should be collapsed by default. Default is false.\n- maxFilesOpen: Maximum number of files that can be opened at once. Default is 5.\n- defaultSelectedPath: Path of the file or folder to be selected by default.`,\n\t\t\tlanguage: 'plaintext'\n\t\t}\n\t]\n}\n",
									language: 'typescript'
								}
							]
						}
					]
				},
				{
					name: 'hooks',
					type: 'directory',
					children: [
						{
							name: 'use-debounce.ts',
							type: 'file',
							content:
								"'use client'\n\nimport { useCallback, useEffect, useRef } from 'react'\n\nexport function useDebouncedCallback<T extends (...args: any[]) => any>(\n\tcallback: T,\n\tdelay: number\n): T {\n\tconst timeoutRef = useRef<NodeJS.Timeout | null>(null)\n\tconst callbackRef = useRef(callback)\n\n\t// Update callback ref when callback changes\n\tuseEffect(() => {\n\t\tcallbackRef.current = callback\n\t}, [callback])\n\n\treturn useCallback(\n\t\t((...args) => {\n\t\t\tif (timeoutRef.current) {\n\t\t\t\tclearTimeout(timeoutRef.current)\n\t\t\t}\n\n\t\t\ttimeoutRef.current = setTimeout(() => {\n\t\t\t\tcallbackRef.current(...args)\n\t\t\t}, delay)\n\t\t}) as T,\n\t\t[delay]\n\t)\n}\n",
							language: 'typescript'
						},
						{
							name: 'useCursorGradient.ts',
							type: 'file',
							content:
								"'use client'\n\nimport { useEffect, useState } from 'react'\n\nexport default function useCursorGradient() {\n\tconst [position, setPosition] = useState({ x: 0, y: 0 })\n\tconst [opacity, setOpacity] = useState(0)\n\n\tuseEffect(() => {\n\t\tconst handleMouseMove = (e: MouseEvent) => {\n\t\t\tsetPosition({ x: e.clientX, y: e.clientY })\n\t\t\tsetOpacity(1)\n\t\t}\n\n\t\tconst handleMouseLeave = () => {\n\t\t\tsetOpacity(0)\n\t\t}\n\n\t\twindow.addEventListener('mousemove', handleMouseMove)\n\t\twindow.addEventListener('mouseleave', handleMouseLeave)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mousemove', handleMouseMove)\n\t\t\twindow.removeEventListener('mouseleave', handleMouseLeave)\n\t\t}\n\t}, [])\n\n\treturn { position, opacity }\n}\n",
							language: 'typescript'
						}
					]
				},
				{
					name: 'lib',
					type: 'directory',
					children: [
						{
							name: 'utils.ts',
							type: 'file',
							content:
								"import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs))\n}\n\nexport const containerClass = 'max-w-[1200px] mx-auto px-4 sm:px-6 lg:px-8'\n",
							language: 'typescript'
						}
					]
				},
				{
					name: 'scripts',
					type: 'directory',
					children: [
						{
							name: 'generate-tree-object.py',
							type: 'file',
							content:
								"import os\\nimport json\\nimport argparse\\nfrom pathlib import Path\\nfrom typing import Dict, Any\\n\\ndef detect_language(file_path: str) -> str:\\n    \\\"\\\"\\\"Detect programming language based on file extension.\\\"\\\"\\\"\\n    extensions = {\\n        '.ts': 'typescript',\\n        '.tsx': 'typescript',\\n        '.js': 'javascript',\\n        '.jsx': 'javascript',\\n        '.py': 'python',\\n        '.go': 'go',\\n        '.rs': 'rust',\\n        '.json': 'json',\\n        '.css': 'css',\\n        '.scss': 'scss',\\n        '.html': 'html',\\n        '.md': 'markdown',\\n        '.yaml': 'yaml',\\n        '.yml': 'yaml',\\n        '.lock': 'yaml'\\n    }\\n    return extensions.get(Path(file_path).suffix.lower(), 'plaintext')\\n\\ndef read_file_content(file_path: str, max_length: int = 500000) -> str:\\n    \\\"\\\"\\\"Read file content with proper encoding handling and length limit.\\\"\\\"\\\"\\n    try:\\n        with open(file_path, 'r', encoding='utf-8') as f:\\n            content = f.read(max_length)\\n            \\n            if len(content) >= max_length:\\n                return \\\"// File content too large to display\\\"\\n            \\n            file_ext = Path(file_path).suffix.lower()\\n            \\n            # For CSS files, return the content directly\\n            if file_ext == '.css':\\n                return content\\n            \\n            # For TypeScript/TSX/JavaScript files\\n            if file_ext in ['.ts', '.tsx', '.js', '.jsx']:\\n                # Normalize line endings and split into lines\\n                lines = content.replace('\\\\r\\\\n', '\\\\n').split('\\\\n')\\n                # Join with explicit newline characters\\n                return '\\\\n'.join(lines)\\n            \\n            # For other files, use standard JSON escaping\\n            return json.dumps(content)[1:-1]\\n            \\n    except UnicodeDecodeError:\\n        return \\\"Binary file not shown\\\"\\n    except Exception as e:\\n        print(f\\\"Warning: Could not read {file_path}: {e}\\\")\\n        return \\\"\\\"\\n\\ndef should_ignore(path: str) -> bool:\\n    \\\"\\\"\\\"Check if path should be ignored.\\\"\\\"\\\"\\n    ignore_patterns = {\\n        '.git', 'node_modules', '__pycache__', \\n        'build', 'dist', '.next', '.env',\\n        '.DS_Store', 'thumbs.db'\\n    }\\n    parts = Path(path).parts\\n    return any(part in ignore_patterns for part in parts)\\n\\ndef scan_directory(path: str, max_file_size: int = 1024 * 1024) -> Dict[str, Any]:\\n    \\\"\\\"\\\"Recursively scan directory and create IDE-compatible structure.\\\"\\\"\\\"\\n    path_obj = Path(path)\\n    \\n    if should_ignore(path):\\n        return None\\n        \\n    if path_obj.is_file():\\n        # Skip files larger than max_file_size\\n        if path_obj.stat().st_size > max_file_size:\\n            content = \\\"// File too large to display\\\"\\n        else:\\n            content = read_file_content(str(path_obj))\\n        \\n        language = detect_language(path_obj.name)\\n        \\n        return {\\n            'name': path_obj.name,\\n            'type': 'file',\\n            'content': content,\\n            'language': language\\n        }\\n    \\n    children = []\\n    try:\\n        for item in sorted(path_obj.iterdir()):\\n            result = scan_directory(str(item), max_file_size)\\n            if result:\\n                children.append(result)\\n    except Exception as e:\\n        print(f\\\"Error scanning directory {path}: {e}\\\")\\n        return None\\n    \\n    return {\\n        'name': path_obj.name,\\n        'type': 'directory',\\n        'children': children\\n    }\\n\\ndef generate_ide_props(directory: str) -> str:\\n    \\\"\\\"\\\"Generate IDE props from directory structure.\\\"\\\"\\\"\\n    structure = scan_directory(directory)\\n    \\n    # Create the complete structure with project root\\n    ide_props = {\\n        'name': 'project-root',\\n        'type': 'directory',\\n        'children': [structure] if structure['name'] != 'project-root' else structure['children']\\n    }\\n    \\n    # Generate TypeScript output with proper formatting\\n    ts_output = \\\"\\\"\\\"// This file is auto-generated. Do not edit manually.\\nexport type FileExplorer = {\\n  name: string;\\n  type: \\\"file\\\" | \\\"directory\\\";\\n  children?: FileExplorer[];\\n  content?: string;\\n  language?: string;\\n}\\n\\nexport const projectStructure: FileExplorer = \\\"\\\"\\\"\\n\\n    def process_content(obj):\\n        if isinstance(obj, dict):\\n            result = {}\\n            for key, value in obj.items():\\n                if key == 'content' and isinstance(value, str):\\n                    # Don't escape already prepared content\\n                    result[key] = value\\n                else:\\n                    result[key] = process_content(value)\\n            return result\\n        elif isinstance(obj, list):\\n            return [process_content(item) for item in obj]\\n        else:\\n            return obj\\n\\n    # Process the content before JSON encoding\\n    processed_props = process_content(ide_props)\\n    \\n    # Convert to JSON with proper indentation\\n    json_str = json.dumps(processed_props, indent=2, ensure_ascii=False)\\n    \\n    ts_output += json_str\\n\\n    return ts_output\\n\\ndef main():\\n    parser = argparse.ArgumentParser(description='Generate IDE props from directory structure')\\n    parser.add_argument('directory', help='Directory to scan')\\n    parser.add_argument('--output', '-o', help='Output file (defaults to tree-object.ts)')\\n    args = parser.parse_args()\\n    \\n    output_file = args.output or 'src/core/config/tree-object.ts'\\n    \\n    try:\\n        props = generate_ide_props(args.directory)\\n        with open(output_file, 'w', encoding='utf-8') as f:\\n            f.write(props)\\n        print(f\\\"Successfully generated IDE structure in {output_file}\\\")\\n    except Exception as e:\\n        print(f\\\"Error: {e}\\\")\\n        exit(1)\\n\\nif __name__ == '__main__':\\n    main()\\n",
							language: 'python'
						}
					]
				},
				{
					name: 'types',
					type: 'directory',
					children: [
						{
							name: 'framer-motion.d.ts',
							type: 'file',
							content:
								"declare module 'framer-motion' {\n\texport const motion: any\n\texport const AnimatePresence: any\n\texport const animate: any\n\texport const stagger: any\n\texport const useAnimation: any\n\texport const useMotionValue: any\n\texport const useTransform: any\n\texport const useSpring: any\n\texport const useDragControls: any\n\n\texport type Transition = {\n\t\tduration?: number\n\t\tdelay?: number\n\t\tease?: string | number[]\n\t\ttype?: string\n\t\tstiffness?: number\n\t\tdamping?: number\n\t\tmass?: number\n\t\tvelocity?: number\n\t}\n\n\texport type Variants = {\n\t\t[key: string]: {\n\t\t\t[key: string]: any\n\t\t\ttransition?: Transition\n\t\t}\n\t}\n}\n",
							language: 'typescript'
						}
					]
				}
			]
		}
	]
}
